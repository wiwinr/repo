{"version":3,"sources":["redux/reducers/employee.reducer.js","redux/types.js","redux/reducers/room.reducer.js","redux/reducers/access.reducer.js","redux/reducers/web.reducer.js","redux/reducers/holiday.reducer.js","redux/reducers/workDay.reducer.js","redux/reducers/auth.reducer.js","redux/reducers/division.reducer.js","redux/reducers/route.reducer.js","redux/reducers/routeGroup.reducer.js","redux/reducers/role.reducer.js","redux/reducers/error.reducer.js","redux/reducers/userApproval.reducer.js","redux/reducers/index.reducer.js","redux/store.js","screens/LoggedIn/loggedin.styles.js","components/Drawer/drawer.styles.js","components/Drawer/drawer.list.item.component.jsx","components/Drawer/drawer.list.component.jsx","components/Drawer/drawer.component.jsx","components/Appbar/appbar.style.js","config/axios.config.js","util/Notification.js","redux/actions/error.action.js","util/HTTPHandler.js","redux/actions/employee.action.js","redux/actions/room.action.js","redux/actions/web.action.js","redux/actions/division.action.js","redux/actions/route.action.js","redux/actions/routeGroup.action.js","redux/actions/role.action.js","components/Appbar/appbar.component.jsx","redux/actions/auth.action.js","components/Paper/paper.styles.js","components/Paper/paper.component.jsx","components/Grid/grid.component.jsx","screens/Control/control.screen.jsx","components/Table/table.component.jsx","components/Textfield/textfield.style.js","components/Textfield/textfield.component.jsx","components/Selects/select.style.js","components/Selects/select.component.jsx","components/List/list.styles.jsx","components/List/list.component.jsx","components/DatePicker/DatePicker.jsx","components/TimePicker/TimePicker.jsx","components/Checkbox/Checkbox.jsx","components/Panel/ExpansionPanel.jsx","components/AutoComplete/AutoComplete.jsx","screens/LoggedIn/loggedin.screen.jsx","screens/Dashboard/dashboard.screen.jsx","screens/Employee/employee.screen.jsx","screens/Employee/employee.edit.screen.jsx","screens/Employee/employee.add.screen.jsx","screens/Employee/employee.detail.screen.jsx","screens/Room/room.screen.jsx","screens/Room/room.add.screen.jsx","screens/Room/room.edit.screen.jsx","config/mqtt.config.js","screens/Access/access.screen.jsx","redux/actions/access.action.js","screens/Access/access.add.screen.jsx","screens/Access/access.edit.screen.jsx","screens/Web/Web.screen.jsx","screens/Web/Web.add.screen.jsx","screens/Web/Web.edit.screen.jsx","screens/Holiday/Holiday.screen.jsx","redux/actions/holiday.action.js","screens/Holiday/Holiday.add.screen.jsx","screens/Holiday/Holiday.edit.screen.jsx","screens/WorkDay/WorkDay.screen.jsx","redux/actions/workDay.action.js","screens/WorkDay/WorkDay.add.screen.jsx","screens/WorkDay/WorkDay.edit.screen.jsx","screens/Division/division.screen.jsx","screens/Division/division.add.screen.jsx","screens/Division/division.edit.screen.jsx","screens/Route/Route.screen.jsx","screens/Route/Form/WebAccess.route.jsx","screens/Route/Route.add.screen.jsx","screens/Route/Route.edit.screen.jsx","screens/RouteGroup/Route.Group.screen.jsx","screens/RouteGroup/Form/RouteAccess.routeGroup.jsx","screens/RouteGroup/Route.Group.add.screen.jsx","screens/RouteGroup/Route.Group.edit.screen.jsx","screens/Role/Role.screen.jsx","screens/Role/Role.add.screen.jsx","screens/Role/Role.edit.screen.jsx","screens/UserApproval/UserApproval.screen.jsx","redux/actions/userApproval.action.js","screens/UserApproval/UserApproval.add.screen.jsx","screens/UserApproval/UserApproval.edit.screen.jsx","screens/Login/login.styles.js","screens/Login/Login.screen.jsx","screens/404/notfound.screen.jsx","App.js","index.js"],"names":["initialState","employees","employee","isLoading","success","msg","employeeReducer","state","action","type","payload","newEmployee","filter","emp","_id","console","log","rooms","room","roomReducer","message","newRoom","accesses","access","accessReducer","newAccess","webs","web","webReducer","newWeb","holidays","holiday","holidayReducer","workDays","workDay","workDayReducer","savedUser","localStorage","getItem","user","Boolean","JSON","parse","divisions","division","divisionReducer","newDivision","routes","route","routeReducer","newRoute","routeGroups","routeGroup","routeGroupReducer","newRouteGroup","roles","role","roleReducer","newRole","initState","isError","inputError","error","requestReducer","userApprovals","userApproval","userApprovalReducer","combineReducers","auth","authReducer","errorReducer","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","useStyles","makeStyles","theme","root","display","content","flexGrow","padding","spacing","toolbar","mixins","drawer","width","backgroundColor","drawerPaper","listItem","textDecoration","fontWeight","color","parent","marginLeft","transition","child","child2","DrawerListItemComponent","props","classes","getStyles","to","itemLink","className","ListItem","button","key","itemKey","ListItemIcon","ListItemText","primary","itemText","Divider","DrawerListComponent","List","menuList","map","text","index","name","linkTo","DrawerComponent","Drawer","variant","paper","appBar","zIndex","background","allText","textArea","myAxios","axios","create","config","baseURL","headers","token","getConfig","Notification","status","toast","style","alignSelf","justifySelf","getIcon","messages","m","putError","callback","dispatch","ERROR_ACTION","response","data","createNotifications","getEmployees","get","then","res","catch","err","HTTPHandler","getEmployee","id","getRooms","editRoom","patch","getWebs","getDivisions","getRoutes","getRouteGroups","getRoles","connect","logout","removeItem","React","useState","anchorEl","setAnchorEl","handleClose","rootAppBar","AppBar","position","Toolbar","Typography","noWrap","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","fullName","Menu","keepMounted","open","onClose","MenuItem","paperTitle","PaperComponent","Paper","children","textAlign","palette","secondary","clientPubSub","TableComponent","columns","tableColumns","tableData","title","tableTitle","actions","rowData","icon","tooltip","tableDetail","tableEdit","tableDelete","options","actionsColumnIndex","headerStyle","filtering","formInput","marginBottom","TextFieldComponent","FormControl","InputLabel","fieldLabel","Input","fieldName","disabled","fieldDisabled","readOnly","fieldReadonly","value","fieldValue","onChange","fieldChanged","fieldType","SelectComponent","Select","inputProps","fieldItem","itemValue","itemName","listRoot","overflow","maxHeight","ListComponent","item","labelId","dense","itemButton","itemClicked","bind","Checkbox","edge","checked","itemChecked","indexOf","tabIndex","disableRipple","itemReadonly","roomName","DatePickerComponent","utils","DateFnsUtils","DatePicker","openTo","view","format","label","views","selectedDate","handleDateChange","inputVariant","TimePicker","clearable","ampm","CheckBox","FormControlLabel","control","handleChange","ExpansionPanelComponent","ExpansionPanel","expanded","handleOpen","ExpansionPanelSummary","expandIcon","summary","ExpansionPanelDetails","details","AutoCompleteComponent","inputValue","onInputChange","errorMessage","Autocomplete","renderInput","params","TextField","helperText","Object","keys","length","fullname","Container","maxWidth","exact","path","component","DashboardScreen","EmployeeScreen","EmployeeAddScreen","EmployeeDetailScreen","EmployeeEditScreen","RoomScreen","RoomAddScreen","RoomEditScreen","ControlScreen","AccessScreen","AccessAddScreen","AccessEditScreen","WebScreen","WebAddScreen","WebEditScreen","HolidayScreen","HolidayAddScreen","HolidayEditScreen","WorkDayScreen","WorkDayAddScreen","WorkDayEditScreen","DivisionScreen","DivisionAddScreen","DivisionEditScreen","RouteGroupScreen","RouteAddGroupScreen","RouteEditGroupScreen","RouteScreen","RouteAddScreen","RouteEditScreen","RoleScreen","RoleAddScreen","RoleEditScreen","UserApprovalScreen","UserApprovalAddScreen","UserApprovalEditScreen","NotFoundScreen","Grid","container","lg","xs","Component","handlerDelete","deleteEmployee","handlerEdit","history","push","handlerDetail","this","Add","field","delete","handleSubmit","e","preventDefault","roleId","split","editEmployee","match","trim","handleReset","setState","gender","rfid","nip","inputRole","target","handleToggle","currentIndex","newChecked","splice","handleRoleChange","handleInputRoleChange","email","nextProps","divisionsList","div","AutoComplete","undefined","addEmployee","password","repassword","post","deleteRoom","addRoom","location","description","category","getRoom","nextprops","changeStatus","roomId","openHandler","roomsState","stringify","newResource","publish","mqtt","on","subscribe","topic","hasil","toString","end","marginTop","deleteAccess","getAccesses","addAccess","uniqueNumber","labelName","selectedCategory","cryptoRandomString","toLocaleLowerCase","selectedCategoryRoom","cr","editAccess","getAccess","nextPropsRoom","deleteWeb","addWeb","webName","webURL","editWeb","getWeb","put","deleteHoliday","getHolidays","addHoliday","date","Date","editHoliday","getHoliday","WorkdayScreen","deleteWorkDay","getWorkDays","w","come","moment","time","back","addWorkDay","dayName","dayCode","timeCome","timeBack","handleTimeComeChange","handleTimeBackChange","editWorkDay","getWorkDay","deleteDivision","addDivision","editDivision","getDivision","deleteRoute","method","toUpperCase","WebAccesses","selectedWeb","selectedWebs","find","handleCheckBoxChange","handleMustAuthenticate","mustAuthenticate","addRoute","groupId","inputGroupName","handleGroupChange","newValue","handleInputGroupChange","newInputValue","webId","isAlreadySelected","mustAuthorize","editRoute","getRoute","nextRoute","deleteRouteGroup","selected","selectedRoutes","selectedRoute","RouteGroupAddScreen","addRouteGroup","routeId","searchRoute","search","toLowerCase","RouteGroupEditScreen","editRouteGroup","getRouteGroup","nextRouteGroup","deleteRole","addRole","i","Fragment","editRole","getRole","nextRole","deleteUserApproval","getUserApprovals","priority","priorityName","userId","addUserApproval","inputUser","handleUserChange","handleInputUserChange","editUserApproval","getUserApproval","nextUserApproval","styles","Login","username","login","height","justifyItems","justifyContent","alignItems","withStyles","withTheme","credentials","setItem","App","LoginScreen","LoggedInScreen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de72586a.chunk.js","sourcesContent":["import {\r\n  LOADING_EMPLOYEE,\r\n  LOADED_EMPLOYEE,\r\n  LOADED_EMPLOYEES,\r\n  ERROR_EMPLOYEE,\r\n  SUCCESS_EMPLOYEE,\r\n  DELETE_EMPLOYEE\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  employee: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_EMPLOYEE: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_EMPLOYEE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        employee: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_EMPLOYEES: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        employees: action.payload\r\n      };\r\n    }\r\n\r\n    case DELETE_EMPLOYEE: {\r\n      let newEmployee = state.employees.filter(\r\n        emp => emp._id !== action.payload\r\n      );\r\n      console.log(newEmployee);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        employees: newEmployee,\r\n        msg: action.msg\r\n      };\r\n    }\r\n\r\n    case SUCCESS_EMPLOYEE: {\r\n      console.log(\"Action : \", action);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.msg\r\n      };\r\n    }\r\n\r\n    case ERROR_EMPLOYEE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default employeeReducer;\r\n","export const LOADING_EMPLOYEE = \"LOADING_EMPLOYEE\";\r\nexport const LOADED_EMPLOYEE = \"LOADED_EMPLOYEE\";\r\nexport const LOADED_EMPLOYEES = \"LOADED_EMPLOYEES\";\r\nexport const ERROR_EMPLOYEE = \"ERROR_EMPLOYEE\";\r\nexport const SUCCESS_EMPLOYEE = \"SUCCESS_EMPLOYEE\";\r\nexport const DELETE_EMPLOYEE = \"DELETE_EMPLOYEE\";\r\n\r\nexport const LOADING_ROOM = \"LOADING_ROOM\";\r\nexport const LOADED_ROOM = \"LOADED_ROOM\";\r\nexport const LOADED_ROOMS = \"LOADED_ROOMS\";\r\nexport const ERROR_ROOM = \"ERROR_ROOM\";\r\nexport const SUCCESS_ROOM = \"SUCCESS_ROOM\";\r\nexport const DELETE_ROOM = \"DELETE_ROOM\";\r\n\r\nexport const LOADING_ACCESS = \"LOADING_ACCESS\";\r\nexport const LOADED_ACCESS = \"LOADED_ACCESS\";\r\nexport const LOADED_ACCESSES = \"LOADED_ACCESSES\";\r\nexport const ERROR_ACCESS = \"ERROR_ACCESS\";\r\nexport const SUCCESS_ACCESS = \"SUCCESS_ACCESS\";\r\nexport const DELETE_ACCESS = \"DELETE_ACCESS\";\r\n\r\nexport const LOADING_WEB = \"LOADING_WEB\";\r\nexport const LOADED_WEB = \"LOADED_WEB\";\r\nexport const LOADED_WEBS = \"LOADED_WEBS\";\r\nexport const ERROR_WEB = \"ERROR_WEB\";\r\nexport const SUCCESS_WEB = \"SUCCESS_WEB\";\r\nexport const DELETE_WEB = \"DELETE_WEB\";\r\n\r\nexport const LOADING_HOLIDAY = \"LOADING_HOLIDAY\";\r\nexport const LOADED_HOLIDAY = \"LOADED_HOLIDAY\";\r\nexport const LOADED_HOLIDAYS = \"LOADED_HOLIDAYS\";\r\nexport const DELETE_HOLIDAY = \"DELETE_HOLIDAY\";\r\nexport const ERROR_HOLIDAY = \"ERROR_HOLIDAY\";\r\nexport const SUCCESS_HOLIDAY = \"SUCCESS_HOLIDAY\";\r\n\r\nexport const LOADING_WORKDAY = \"LOADING_WORKDAY\";\r\nexport const LOADED_WORKDAY = \"LOADED_WORKDAY\";\r\nexport const LOADED_WORKDAYS = \"LOADED_WORKDAYS\";\r\nexport const ERROR_WORKDAY = \"ERROR_WORKDAY\";\r\nexport const SUCCESS_WORKDAY = \"SUCCESS_WORKDAY\";\r\nexport const DELETE_WORKDAY = \"DELETE_WORKDAY\";\r\n\r\nexport const LOADING_AUTH = \"LOADING_AUTH\";\r\nexport const ERROR_AUTH = \"ERROR_AUTH\";\r\nexport const SUCCESS_AUTH = \"SUCCESS_AUTH\";\r\nexport const LOGOUT_AUTH = \"LOGOUT_AUTH\";\r\n\r\nexport const LOADING_DIVISION = \"LOADING_DIVISION\";\r\nexport const LOADED_DIVISION = \"LOADED_DIVISION\";\r\nexport const LOADED_DIVISIONS = \"LOADED_DIVISIONS\";\r\nexport const ERROR_DIVISION = \"ERROR_DIVISION\";\r\nexport const SUCCESS_DIVISION = \"SUCCESS_DIVISION\";\r\nexport const DELETE_DIVISION = \"DELETE_DIVISION\";\r\n\r\n\r\nexport const LOADING_ROUTE = \"LOADING_ROUTE\";\r\nexport const LOADED_ROUTE = \"LOADED_ROUTE\";\r\nexport const LOADED_ROUTES = \"LOADED_ROUTES\";\r\nexport const ERROR_ROUTE = \"ERROR_ROUTE\";\r\nexport const SUCCESS_ROUTE = \"SUCCESS_ROUTE\";\r\nexport const DELETE_ROUTE = \"DELETE_ROUTE\";\r\n\r\nexport const LOADING_ROUTEGROUP = \"LOADING_ROUTEGROUP\";\r\nexport const LOADED_ROUTEGROUP = \"LOADED_ROUTEGROUP\";\r\nexport const LOADED_ROUTEGROUPS = \"LOADED_ROUTESGROUP\";\r\nexport const ERROR_ROUTEGROUP = \"ERROR_ROUTEGROUP\";\r\nexport const SUCCESS_ROUTEGROUP = \"SUCCESS_ROUTEGROUP\";\r\nexport const DELETE_ROUTEGROUP = \"DELETE_ROUTEGROUP\";\r\n\r\nexport const LOADING_ROLE = \"LOADING_ROLE\";\r\nexport const LOADED_ROLE = \"LOADED_ROLE\";\r\nexport const LOADED_ROLES = \"LOADED_ROLES\";\r\nexport const ERROR_ROLE = \"ERROR_ROLE\";\r\nexport const SUCCESS_ROLE = \"SUCCESS_ROLE\";\r\nexport const DELETE_ROLE = \"DELETE_ROLE\";\r\n\r\nexport const LOADING_USERAPPROVAL = \"LOADING_USERAPPROVAL\";\r\nexport const LOADED_USERAPPROVAL = \"LOADED_USERAPPROVAL\";\r\nexport const LOADED_USERAPPROVALS = \"LOADED_USERAPPROVALS\";\r\nexport const ERROR_USERAPPROVAL = \"ERROR_USERAPPROVAL\";\r\nexport const SUCCESS_USERAPPROVAL = \"SUCCESS_USERAPPROVAL\";\r\nexport const DELETE_USERAPPROVAL = \"DELETE_USERAPPROVAL\";\r\n\r\nexport const PUT_ERROR = \"PUT_ERROR\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\nexport const PUT_BADINPUT = \"PUT_BADINPUT\";","import {\r\n  LOADING_ROOM,\r\n  LOADED_ROOM,\r\n  LOADED_ROOMS,\r\n  ERROR_ROOM,\r\n  SUCCESS_ROOM,\r\n  DELETE_ROOM\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  rooms: [],\r\n  room: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst roomReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_ROOM: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_ROOM: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        room: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_ROOMS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        rooms: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_ROOM: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_ROOM: {\r\n      let newRoom = state.rooms.filter(room => room._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        rooms: newRoom,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_ROOM: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default roomReducer;\r\n","import {\r\n  LOADING_ACCESS,\r\n  LOADED_ACCESS,\r\n  LOADED_ACCESSES,\r\n  ERROR_ACCESS,\r\n  SUCCESS_ACCESS,\r\n  DELETE_ACCESS\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  accesses: [],\r\n  access: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst accessReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_ACCESS: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_ACCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        access: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_ACCESSES: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        accesses: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_ACCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_ACCESS: {\r\n      let newAccess = state.accesses.filter(\r\n        access => access._id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        accesses: newAccess,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_ACCESS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default accessReducer;\r\n","import {\r\n  LOADING_WEB,\r\n  LOADED_WEB,\r\n  LOADED_WEBS,\r\n  ERROR_WEB,\r\n  SUCCESS_WEB,\r\n  DELETE_WEB\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  webs: [],\r\n  web: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst webReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_WEB: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_WEB: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        web: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_WEBS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        webs: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_WEB: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_WEB: {\r\n      let newWeb = state.webs.filter(web => web._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        webs: newWeb,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_WEB: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default webReducer;","import {\r\n  LOADING_HOLIDAY,\r\n  LOADED_HOLIDAY,\r\n  LOADED_HOLIDAYS,\r\n  ERROR_HOLIDAY,\r\n  SUCCESS_HOLIDAY,\r\n  DELETE_HOLIDAY\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  holidays: [],\r\n  holiday: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst holidayReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_HOLIDAY: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_HOLIDAY: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        holiday: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_HOLIDAYS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        holidays: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_HOLIDAY: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_HOLIDAY: {\r\n      let newRoom = state.holidays.filter(holiday => holiday._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        holidays: newRoom,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_HOLIDAY: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default holidayReducer;","import {\r\n  LOADING_WORKDAY,\r\n  LOADED_WORKDAY,\r\n  LOADED_WORKDAYS,\r\n  ERROR_WORKDAY,\r\n  SUCCESS_WORKDAY,\r\n  DELETE_WORKDAY\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  workDays: [],\r\n  workDay: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst workDayReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_WORKDAY: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_WORKDAY: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        workDay: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_WORKDAYS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        workDays: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_WORKDAY: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_WORKDAY: {\r\n      let newRoom = state.workDays.filter(workDay => workDay._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        workDays: newRoom,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_WORKDAY: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default workDayReducer;","import {\r\n  LOADING_AUTH,\r\n  ERROR_AUTH,\r\n  SUCCESS_AUTH,\r\n  LOGOUT_AUTH\r\n} from \"../types\";\r\n\r\nconst savedUser = localStorage.getItem(\"user\");\r\n\r\nconst initialState = {\r\n  user: Boolean(savedUser) ? JSON.parse(savedUser) : {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst employeeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_AUTH: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case SUCCESS_AUTH: {\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.msg\r\n      };\r\n    }\r\n\r\n    case ERROR_AUTH: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    case LOGOUT_AUTH: {\r\n      return {\r\n        isLoading: false,\r\n        user: {}\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default employeeReducer;","import {\r\n  LOADING_DIVISION,\r\n  LOADED_DIVISION,\r\n  LOADED_DIVISIONS,\r\n  ERROR_DIVISION,\r\n  SUCCESS_DIVISION,\r\n  DELETE_DIVISION,\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  divisions: [],\r\n  division: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {},\r\n};\r\n\r\nconst divisionReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_DIVISION: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true,\r\n      };\r\n    }\r\n\r\n    case LOADED_DIVISION: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        division: action.payload,\r\n      };\r\n    }\r\n\r\n    case LOADED_DIVISIONS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        divisions: action.payload,\r\n      };\r\n    }\r\n\r\n    case SUCCESS_DIVISION: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message,\r\n      };\r\n    }\r\n    case DELETE_DIVISION: {\r\n      let newDivision = state.divisions.filter(\r\n        (division) => division._id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        divisions: newDivision,\r\n        msg: action.message,\r\n      };\r\n    }\r\n\r\n    case ERROR_DIVISION: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default divisionReducer;\r\n","import {\r\n  LOADING_ROUTE,\r\n  LOADED_ROUTE,\r\n  LOADED_ROUTES,\r\n  ERROR_ROUTE,\r\n  SUCCESS_ROUTE,\r\n  DELETE_ROUTE\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  routes: [],\r\n  route: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst routeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_ROUTE: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_ROUTE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        route: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_ROUTES: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        routes: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_ROUTE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_ROUTE: {\r\n      let newRoute = state.routes.filter(route => route._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        routes: newRoute,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_ROUTE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default routeReducer;","import {\r\n  LOADING_ROUTEGROUP,\r\n  LOADED_ROUTEGROUP,\r\n  LOADED_ROUTEGROUPS,\r\n  ERROR_ROUTEGROUP,\r\n  SUCCESS_ROUTEGROUP,\r\n  DELETE_ROUTEGROUP\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  routeGroups: [],\r\n  routeGroup: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst routeGroupReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_ROUTEGROUP: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_ROUTEGROUP: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        routeGroup: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_ROUTEGROUPS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        routeGroups: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_ROUTEGROUP: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_ROUTEGROUP: {\r\n      let newRouteGroup = state.routeGroups.filter(routeGroup => routeGroup._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        routeGroups: newRouteGroup,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_ROUTEGROUP: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default routeGroupReducer;","import {\r\n  LOADING_ROLE,\r\n  LOADED_ROLE,\r\n  LOADED_ROLES,\r\n  ERROR_ROLE,\r\n  SUCCESS_ROLE,\r\n  DELETE_ROLE\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  roles: [],\r\n  role: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst roleReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_ROLE: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_ROLE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        role: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_ROLES: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        roles: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_ROLE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_ROLE: {\r\n      let newRole = state.roles.filter(role => role._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        roles: newRole,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_ROLE: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default roleReducer;","import {\r\n  PUT_ERROR,\r\n  PUT_BADINPUT,\r\n  CLEAR_ERROR\r\n} from '../types';\r\n\r\nconst initState = {\r\n  isError: false,\r\n  inputError: {},\r\n  error: {}\r\n};\r\n\r\nconst requestReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case PUT_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.payload.error,\r\n        isError: true\r\n      }\r\n    }\r\n\r\n    case PUT_BADINPUT:\r\n      return {\r\n        ...state,\r\n        isError: true,\r\n          inputError: action.payload.message\r\n      }\r\n\r\n      case CLEAR_ERROR:\r\n        return {\r\n          ...state,\r\n          isError: false,\r\n            error: {},\r\n            inputError: {}\r\n        }\r\n\r\n        default:\r\n          return state;\r\n  }\r\n}\r\n\r\nexport default requestReducer;","import {\r\n  LOADING_USERAPPROVAL,\r\n  LOADED_USERAPPROVAL,\r\n  LOADED_USERAPPROVALS,\r\n  ERROR_USERAPPROVAL,\r\n  SUCCESS_USERAPPROVAL,\r\n  DELETE_USERAPPROVAL\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n  userApprovals: [],\r\n  userApproval: {},\r\n  isLoading: false,\r\n  success: false,\r\n  msg: {}\r\n};\r\n\r\nconst userApprovalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_USERAPPROVAL: {\r\n      return {\r\n        ...state,\r\n        success: false,\r\n        isLoading: true\r\n      };\r\n    }\r\n\r\n    case LOADED_USERAPPROVAL: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        userApproval: action.payload\r\n      };\r\n    }\r\n\r\n    case LOADED_USERAPPROVALS: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        userApprovals: action.payload\r\n      };\r\n    }\r\n\r\n    case SUCCESS_USERAPPROVAL: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        msg: action.message\r\n      };\r\n    }\r\n    case DELETE_USERAPPROVAL: {\r\n      let newRoom = state.userApprovals.filter(userApproval => userApproval._id !== action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        success: true,\r\n        userApprovals: newRoom,\r\n        msg: action.message\r\n      };\r\n    }\r\n\r\n    case ERROR_USERAPPROVAL: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        msg: action.payload\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default userApprovalReducer;","import {\r\n  combineReducers\r\n} from \"redux\";\r\n\r\nimport employeeReducer from \"./employee.reducer\";\r\nimport roomReducer from \"./room.reducer\";\r\nimport accessReducer from \"./access.reducer\";\r\nimport webReducer from \"./web.reducer\";\r\nimport holidayReducer from \"./holiday.reducer\";\r\nimport workDayReducer from \"./workDay.reducer\";\r\nimport authReducer from \"./auth.reducer\";\r\nimport divisionReducer from \"./division.reducer\";\r\nimport routeReducer from \"./route.reducer\";\r\nimport routeGroupReducer from \"./routeGroup.reducer\";\r\nimport roleReducer from \"./role.reducer\";\r\nimport errorReducer from \"./error.reducer\";\r\nimport userApprovalReducer from \"./userApproval.reducer\";\r\n\r\nexport default combineReducers({\r\n  employee: employeeReducer,\r\n  room: roomReducer,\r\n  access: accessReducer,\r\n  web: webReducer,\r\n  holiday: holidayReducer,\r\n  workDay: workDayReducer,\r\n  auth: authReducer,\r\n  division: divisionReducer,\r\n  route: routeReducer,\r\n  routeGroup: routeGroupReducer,\r\n  role: roleReducer,\r\n  error: errorReducer,\r\n  userApproval: userApprovalReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index.reducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n\r\n  // applyMiddleware(...middleWare)\r\n  compose(\r\n    applyMiddleware(...middleWare),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2)\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n}));\r\n\r\nexport default useStyles;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: 240,\r\n    backgroundColor: \"white\",\r\n  },\r\n  drawerPaper: {\r\n    width: 250,\r\n  },\r\n  listItem: {\r\n    textDecoration: \"none\",\r\n    fontWeight: \"bolder\",\r\n    color: \"black\",\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  parent: {\r\n    \"&:hover $child\": {\r\n      marginLeft: \"0px\",\r\n      transition: \".5s\",\r\n      padding: 5,\r\n    },\r\n    \"&:hover $child2\": {\r\n      marginLeft: \"20px\",\r\n      transition: \".5s\",\r\n    },\r\n  },\r\n  child: {\r\n    // fontSize: \"2em\",\r\n    // padding: 24,\r\n    transition: \".5s\",\r\n  },\r\n  child2: {\r\n    transition: \".5s\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  ListItemIcon,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getStyles from \"./drawer.styles\";\r\n\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nconst DrawerListItemComponent = (props) => {\r\n  const classes = getStyles();\r\n  return (\r\n    <Link to={props.itemLink} className={classes.listItem}>\r\n      <ListItem className={classes.parent} button key={props.itemKey}>\r\n        <ListItemIcon className={classes.child2}>\r\n          <ChevronRightIcon />\r\n        </ListItemIcon>\r\n        <ListItemText className={classes.child} primary={props.itemText} />\r\n      </ListItem>\r\n      <Divider />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default DrawerListItemComponent;\r\n","import React from \"react\";\r\nimport { List } from \"@material-ui/core\";\r\nimport DrawerListItemComponent from \"./drawer.list.item.component\";\r\n\r\nconst DrawerListComponent = props => {\r\n  return (\r\n    <List>\r\n      {props.menuList.map((text, index) => (\r\n        <DrawerListItemComponent\r\n          key={index}\r\n          itemKey={index}\r\n          itemText={text.name}\r\n          itemLink={text.linkTo}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default DrawerListComponent;\r\n","import React from \"react\";\r\nimport { Drawer } from \"@material-ui/core\";\r\n\r\nimport getStyles from \"./drawer.styles\";\r\n\r\nimport DrawerListComponent from \"./drawer.list.component\";\r\n\r\nconst DrawerComponent = props => {\r\n  const classes = getStyles();\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      classes={{ paper: classes.drawerPaper }}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <DrawerListComponent\r\n        menuList={[\r\n          { name: \"Dashboard\", linkTo: \"/\" },\r\n          { name: \"Employee\", linkTo: \"/employee\" },\r\n          { name: \"Division\", linkTo: \"/division\" },\r\n          { name: \"Rooms\", linkTo: \"/room\" },\r\n          { name: \"Access\", linkTo: \"/access\" },\r\n          { name: \"Web\", linkTo: \"/web\" },\r\n          { name: \"Holiday\", linkTo: \"/holiday\" },\r\n          { name: \"Work Day\", linkTo: \"/workday\" },\r\n          { name: \"Route\", linkTo: \"/route\" },\r\n          { name: \"Route Group\", linkTo: \"/route/group\" },\r\n          { name: \"Role\", linkTo: \"/role\" },\r\n          { name: \"User Approval\", linkTo: \"/user/approval\" }\r\n        ]}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default DrawerComponent;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    color: \"white\"\r\n  },\r\n  allText: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  textArea: {\r\n    marginLeft: \"auto\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import axios from \"axios\";\r\n\r\nconst getConfig = () => {\r\n  const config = {\r\n    baseURL: \"http://192.168.1.142:5000/\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  console.log(token);\r\n\r\n  if (Boolean(token))\r\n    config.headers[\"x-auth-token\"] = token;\r\n\r\n  return config;\r\n};\r\n\r\nconst myAxios = () => {\r\n  return axios.create(getConfig());\r\n};\r\n\r\nexport default myAxios;","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\n\r\nclass Notification {\r\n  static createNotification(message, status) {\r\n    toast[status](\r\n      <div style={{ display: \"flex\" }}>\r\n        <p>{message}</p>\r\n        <div\r\n          style={{\r\n            marginLeft: \"auto\",\r\n            alignSelf: \"center\",\r\n            justifySelf: \"center\"\r\n          }}\r\n        >\r\n          {Notification.getIcon(status)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  static createNotifications(messages, status) {\r\n    messages.map(m =>\r\n      toast[status](\r\n        <div style={{ display: \"flex\" }}>\r\n          <p>{m.message}</p>\r\n          <div\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              alignSelf: \"center\",\r\n              justifySelf: \"center\"\r\n            }}\r\n          >\r\n            {Notification.getIcon(status)}\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n\r\n  static getIcon(status) {\r\n    switch (status) {\r\n      case \"error\":\r\n        return <ErrorOutlineIcon />;\r\n\r\n      case \"success\":\r\n        return <DoneIcon />;\r\n\r\n      default:\r\n        return <DoneIcon />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","export const PUT_ERROR = \"PUT_ERROR\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\nexport const PUT_BADINPUT = \"PUT_BADINPUT\";\r\n\r\nexport const putError = (status, message, callback) => dispatch => {\r\n  dispatch({\r\n    type: PUT_ERROR,\r\n    payload: {\r\n      status,\r\n      message\r\n    }\r\n  });\r\n\r\n  if (callback)\r\n    callback(message);\r\n}\r\n\r\nexport const clearError = () => dispatch => {\r\n  dispatch({\r\n    type: CLEAR_ERROR\r\n  });\r\n}\r\n\r\nexport const putBadInput = (status, message, callback) => dispatch => {\r\n  dispatch({\r\n    type: PUT_BADINPUT,\r\n    payload: {\r\n      status,\r\n      message\r\n    }\r\n  });\r\n\r\n  if (callback)\r\n    callback(message);\r\n}","import {\r\n  putError,\r\n  putBadInput\r\n} from '../redux/actions/error.action';\r\nimport Notification from './Notification';\r\n\r\nexport default (error, dispatch, ERROR_ACTION) => {\r\n  if (error && error.response) {\r\n    const {\r\n      data\r\n    } = error.response;\r\n\r\n    switch (data.status) {\r\n      case 500:\r\n        dispatch(putError(data.status, data.message, messages => Notification.createNotifications(messages, 'error')));\r\n        break;\r\n      case 404:\r\n        dispatch(putError(data.status, data.message, messages => Notification.createNotifications(messages, 'error')));\r\n        break;\r\n      case 400:\r\n        dispatch(putBadInput(data.status, data.message));\r\n        break;\r\n      default:\r\n    }\r\n\r\n    if (ERROR_ACTION)\r\n      dispatch({\r\n        type: ERROR_ACTION\r\n      });\r\n  }\r\n}","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_EMPLOYEE,\r\n  LOADED_EMPLOYEE,\r\n  LOADED_EMPLOYEES,\r\n  ERROR_EMPLOYEE,\r\n  SUCCESS_EMPLOYEE,\r\n  DELETE_EMPLOYEE\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getEmployees = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_EMPLOYEE\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/employee\")\r\n    .then(res => {\r\n      console.log(res.data.data);\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_EMPLOYEES,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_EMPLOYEE);\r\n    });\r\n};\r\n\r\nexport const getEmployee = id => dispatch => {\r\n  dispatch({\r\n    type: LOADING_EMPLOYEE\r\n  });\r\n\r\n  return axios()\r\n    .get(`/employee/${id}`)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_EMPLOYEE,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_EMPLOYEE);\r\n    });\r\n};\r\n\r\nexport const addEmployee = employee => dispatch => {\r\n  return axios()\r\n    .post(\"/employee\", employee)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_EMPLOYEE,\r\n        payload: data,\r\n        msg: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_EMPLOYEE);\r\n    });\r\n};\r\n\r\nexport const editEmployee = (id, employee) => dispatch => {\r\n  return axios()\r\n    .patch(`/employee/${id}`, employee)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_EMPLOYEE,\r\n        payload: data,\r\n        msg: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_EMPLOYEE);\r\n    });\r\n};\r\n\r\nexport const deleteEmployee = id => dispatch => {\r\n  return axios()\r\n    .delete(`/employee/${id}`)\r\n    .then(res => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_EMPLOYEE,\r\n        payload: id,\r\n        msg: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_EMPLOYEE);\r\n    });\r\n};","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_ROOM,\r\n  LOADED_ROOM,\r\n  LOADED_ROOMS,\r\n  DELETE_ROOM,\r\n  ERROR_ROOM,\r\n  SUCCESS_ROOM\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getRooms = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROOM\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/room\")\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROOMS,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROOM);\r\n    });\r\n};\r\n\r\nexport const getRoom = id => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROOM\r\n  });\r\n\r\n  return axios()\r\n    .get(`/room/${id}`)\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROOM,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROOM);\r\n    });\r\n};\r\n\r\nexport const addRoom = room => dispatch => {\r\n  return axios()\r\n    .post(\"/room\", room)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROOM,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROOM);\r\n    });\r\n};\r\n\r\nexport const editRoom = (id, room, callback) => dispatch => {\r\n  return axios()\r\n    .patch(`/room/${id}`, room)\r\n    .then(res => {\r\n      // console.log(room);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROOM,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROOM);\r\n    });\r\n};\r\n\r\nexport const deleteRoom = id => dispatch => {\r\n  return axios()\r\n    .delete(`/room/${id}`)\r\n    .then(res => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_ROOM,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROOM);\r\n    });\r\n};","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_WEB,\r\n  LOADED_WEB,\r\n  LOADED_WEBS,\r\n  DELETE_WEB,\r\n  ERROR_WEB,\r\n  SUCCESS_WEB,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getWebs = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_WEB,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/web\")\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_WEBS,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WEB);\r\n    });\r\n};\r\n\r\nexport const getWeb = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_WEB,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/web/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_WEB,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WEB);\r\n    });\r\n};\r\n\r\nexport const addWeb = (web) => (dispatch) => {\r\n  return axios()\r\n    .post(\"/web\", web)\r\n    .then((res) => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_WEB,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WEB);\r\n    });\r\n};\r\n\r\nexport const editWeb = (id, web, callback) => (dispatch) => {\r\n  return axios()\r\n    .put(`/web/${id}`, web)\r\n    .then((res) => {\r\n      // console.log(web);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_WEB,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WEB);\r\n    });\r\n};\r\n\r\nexport const deleteWeb = (id) => (dispatch) => {\r\n  return axios()\r\n    .delete(`/web/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_WEB,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WEB);\r\n    });\r\n};","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_DIVISION,\r\n  LOADED_DIVISION,\r\n  LOADED_DIVISIONS,\r\n  DELETE_DIVISION,\r\n  ERROR_DIVISION,\r\n  SUCCESS_DIVISION,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\"\r\n\r\nexport const getDivisions = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_DIVISION,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/division\")\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_DIVISIONS,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_DIVISION);\r\n    });\r\n};\r\n\r\nexport const getDivision = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_DIVISION,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/division/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_DIVISION,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_DIVISION);\r\n    });\r\n};\r\n\r\nexport const addDivision = (division) => (dispatch) => {\r\n  return axios()\r\n    .post(\"/division\", division)\r\n    .then((res) => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_DIVISION,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_DIVISION);\r\n    });\r\n};\r\n\r\nexport const editDivision = (id, division, callback) => (dispatch) => {\r\n  return axios()\r\n    .patch(`/division/${id}`, division)\r\n    .then((res) => {\r\n      // console.log(room);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_DIVISION,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        },\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_DIVISION);\r\n    });\r\n};\r\n\r\nexport const deleteDivision = (id) => (dispatch) => {\r\n  return axios()\r\n    .delete(`/division/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_DIVISION,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_DIVISION);\r\n    });\r\n};","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_ROUTE,\r\n  LOADED_ROUTE,\r\n  LOADED_ROUTES,\r\n  DELETE_ROUTE,\r\n  ERROR_ROUTE,\r\n  SUCCESS_ROUTE,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getRoutes = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROUTE,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/route\")\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROUTES,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTE);\r\n    });\r\n};\r\n\r\nexport const getRoute = id => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROUTE,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/route/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROUTE,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTE);\r\n    });\r\n};\r\n\r\nexport const addRoute = route => dispatch => {\r\n  return axios()\r\n    .post(\"/route\", route)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROUTE,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTE);\r\n    });\r\n};\r\n\r\nexport const editRoute = (id, route, callback) => dispatch => {\r\n  return axios()\r\n    .put(`/route/${id}`, route)\r\n    .then(res => {\r\n      // console.log(route);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROUTE,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTE);\r\n    });\r\n};\r\n\r\nexport const deleteRoute = id => dispatch => {\r\n  return axios()\r\n    .delete(`/route/${id}`)\r\n    .then(res => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_ROUTE,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTE);\r\n    });\r\n};","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_ROUTEGROUP,\r\n  LOADED_ROUTEGROUP,\r\n  LOADED_ROUTEGROUPS,\r\n  DELETE_ROUTEGROUP,\r\n  ERROR_ROUTEGROUP,\r\n  SUCCESS_ROUTEGROUP,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getRouteGroups = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROUTEGROUP,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/route/group\")\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROUTEGROUPS,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTEGROUP);\r\n    });\r\n};\r\n\r\nexport const getRouteGroup = id => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROUTEGROUP,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/route/group/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROUTEGROUP,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTEGROUP);\r\n    });\r\n};\r\n\r\nexport const addRouteGroup = routeGroup => dispatch => {\r\n  return axios()\r\n    .post(\"/route/group\", routeGroup)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROUTEGROUP,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTEGROUP);\r\n    });\r\n};\r\n\r\nexport const editRouteGroup = (id, routeGroup, callback) => dispatch => {\r\n  return axios()\r\n    .put(`/route/group/${id}`, routeGroup)\r\n    .then(res => {\r\n      // console.log(routeGroup);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROUTEGROUP,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTEGROUP);\r\n    });\r\n};\r\n\r\nexport const deleteRouteGroup = id => dispatch => {\r\n  return axios()\r\n    .delete(`/route/group/${id}`)\r\n    .then(res => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_ROUTEGROUP,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROUTEGROUP);\r\n    });\r\n};","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_ROLE,\r\n  LOADED_ROLE,\r\n  LOADED_ROLES,\r\n  DELETE_ROLE,\r\n  ERROR_ROLE,\r\n  SUCCESS_ROLE,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getRoles = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROLE,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/role\")\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROLES,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROLE);\r\n    });\r\n};\r\n\r\nexport const getRole = id => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ROLE,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/role/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ROLE,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROLE);\r\n    });\r\n};\r\n\r\nexport const addRole = role => dispatch => {\r\n  return axios()\r\n    .post(\"/role\", role)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROLE,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROLE);\r\n    });\r\n};\r\n\r\nexport const editRole = (id, role, callback) => dispatch => {\r\n  return axios()\r\n    .put(`/role/${id}`, role)\r\n    .then(res => {\r\n      // console.log(role);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ROLE,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROLE);\r\n    });\r\n};\r\n\r\nexport const deleteRole = id => dispatch => {\r\n  return axios()\r\n    .delete(`/role/${id}`)\r\n    .then(res => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_ROLE,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ROLE);\r\n    });\r\n};","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Button,\r\n  Menu,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport getStyles from \"./appbar.style\";\r\nimport { connect } from \"react-redux\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { logout } from \"../../redux/actions/actions\";\r\n\r\nconst AppBarComponent = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    props.logout();\r\n  };\r\n\r\n  const classes = getStyles();\r\n  return (\r\n    <div className={classes.rootAppBar}>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant={\"h6\"} noWrap className={classes.allText}>\r\n            STHIRA NUSANTARA\r\n          </Typography>\r\n          <div className={classes.textArea}>\r\n            <Button\r\n              aria-controls=\"profile-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n              color=\"inherit\"\r\n            >\r\n              {props.fullName}\r\n              <ArrowDropDownIcon />\r\n            </Button>\r\n            <Menu\r\n              id=\"profile-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(AppBarComponent);\r\n","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_AUTH,\r\n  ERROR_AUTH,\r\n  SUCCESS_AUTH,\r\n  LOGOUT_AUTH\r\n} from \"../types\";\r\n\r\nexport const login = credentials => dispatch => {\r\n  dispatch({\r\n    type: LOADING_AUTH\r\n  });\r\n\r\n  return axios()\r\n    .post(\"/auth/login\", credentials)\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      localStorage.setItem(\"token\", data.token);\r\n      localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n      dispatch({\r\n        type: SUCCESS_AUTH,\r\n        payload: data.user\r\n      });\r\n    })\r\n    .catch(err => {\r\n      const {\r\n        data\r\n      } = err.response;\r\n\r\n      dispatch({\r\n        type: ERROR_AUTH,\r\n        payload: data\r\n      });\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"user\");\r\n\r\n  dispatch({\r\n    type: LOGOUT_AUTH\r\n  })\r\n};","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  paperTitle: {\r\n    fontWeight: \"bolder\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport getStyles from \"./paper.styles\";\r\n\r\nconst PaperComponent = props => {\r\n  const classes = getStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography variant={\"h6\"} className={classes.paperTitle}>\r\n        {props.paperTitle}\r\n      </Typography>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default PaperComponent;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>xs=12</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>xs=6</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paper}>xs=3</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { clientMqtt } from \"../../config/mqtt.config\";\r\n\r\nimport { getRooms, editRoom } from \"../../redux/actions/actions\";\r\n\r\nimport { PaperComponent } from \"../../components/components\";\r\n\r\nlet clientPubSub;\r\n\r\nclass ControlScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rooms: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getRooms();\r\n    clientPubSub = clientMqtt();\r\n    clientPubSub.on(\"connect\", () => {\r\n      clientPubSub.publish(\"connected\", \"hai\");\r\n      clientPubSub.subscribe(\"connected\");\r\n      clientPubSub.subscribe(\"changeState\");\r\n    });\r\n\r\n    clientPubSub.on(\"message\", (topic, message) => {\r\n      if (topic === \"changeState\") {\r\n        let hasil = JSON.parse(message.toString());\r\n        console.log(hasil);\r\n      }\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.setState({ rooms: nextProps.room.rooms });\r\n  }\r\n\r\n  changeStatus = (index, roomId) => {};\r\n\r\n  openHandler = (index, roomId, e) => {\r\n    e.preventDefault();\r\n    let roomsState = JSON.parse(JSON.stringify(this.state.rooms));\r\n    roomsState[index].status = roomsState[index].status === \"1\" ? \"0\" : \"1\";\r\n    this.props.editRoom(roomId, roomsState[index], newResource => {\r\n      this.setState({ rooms: roomsState }, () =>\r\n        clientPubSub.publish(\r\n          `${roomsState[index].name}/openDoor`,\r\n          `${roomsState[index].status}`\r\n        )\r\n      );\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (clientPubSub) {\r\n      clientPubSub.end();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Control Demo</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          {this.state.rooms.map((room, index) => (\r\n            <Grid item xs={12} lg={3} key={index}>\r\n              <PaperComponent>\r\n                <Typography>{room.name}</Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color={room.status === \"1\" ? \"primary\" : \"secondary\"}\r\n                  style={{ marginTop: \"10px\" }}\r\n                  onClick={this.openHandler.bind(this, index, room._id)}\r\n                >\r\n                  {room.status === \"1\" ? \"Opened\" : \"Closed\"}\r\n                </Button>\r\n              </PaperComponent>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room\r\n});\r\n\r\nexport default connect(mapStateToProps, { getRooms, editRoom })(ControlScreen);\r\n","import React from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nconst TableComponent = props => {\r\n  return (\r\n    <MaterialTable\r\n      style={{ padding: \"0 20px\" }}\r\n      columns={props.tableColumns}\r\n      data={props.tableData}\r\n      title={props.tableTitle}\r\n      actions={[\r\n        rowData => ({\r\n          icon: \"more_horiz\",\r\n          tooltip: \"Detail Data\",\r\n          onClick: (event, rowData) => props.tableDetail(rowData._id)\r\n        }),\r\n        rowData => ({\r\n          icon: \"edit\",\r\n          tooltip: \"Edit Data\",\r\n          onClick: (event, rowData) => props.tableEdit(rowData._id)\r\n        }),\r\n        rowData => ({\r\n          icon: \"delete\",\r\n          tooltip: \"Delete Data\",\r\n          onClick: (event, rowData) => props.tableDelete(rowData._id)\r\n        })\r\n      ]}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n        headerStyle: {\r\n          fontWeight: \"Bold\",\r\n          backgroundColor: \"#f8f8f8\"\r\n        },\r\n        filtering: true\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formInput: {\r\n    width: \"100%\",\r\n    marginBottom: \"20px\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { FormControl, InputLabel, Input } from \"@material-ui/core\";\r\nimport getStyles from \"./textfield.style\";\r\n\r\nconst TextFieldComponent = (props) => {\r\n  const classes = getStyles();\r\n  return (\r\n    <FormControl className={classes.formInput}>\r\n      <InputLabel>{props.fieldLabel}</InputLabel>\r\n      <Input\r\n        name={props.fieldName}\r\n        disabled={props.fieldDisabled}\r\n        readOnly={props.fieldReadonly}\r\n        value={props.fieldValue ? props.fieldValue : \"\"}\r\n        onChange={props.fieldChanged}\r\n        type={props.fieldType}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default TextFieldComponent;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formInput: {\r\n    width: \"100%\",\r\n    marginBottom: \"20px\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { Select, FormControl, MenuItem, InputLabel } from \"@material-ui/core\";\r\nimport getStyles from \"./select.style\";\r\nconst SelectComponent = props => {\r\n  const classes = getStyles();\r\n  return (\r\n    <FormControl className={classes.formInput}>\r\n      <InputLabel>{props.fieldLabel}</InputLabel>\r\n      <Select\r\n        name={props.fieldName}\r\n        value={props.fieldValue !== null ? props.fieldValue : \"\"}\r\n        onChange={props.fieldChanged}\r\n        inputProps={{ readOnly: props.fieldReadonly }}\r\n      >\r\n        <MenuItem>{\"Select Item\"}</MenuItem>\r\n        {props.fieldItem.map(({ itemValue, itemName }, index) => (\r\n          <MenuItem key={index} value={itemValue}>\r\n            {itemName}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SelectComponent;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listRoot: {\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    maxHeight: 300\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Checkbox\r\n} from \"@material-ui/core\";\r\n\r\nimport getStyles from \"./list.styles\";\r\n\r\nconst ListComponent = props => {\r\n  const classes = getStyles();\r\n  return (\r\n    <List className={classes.root}>\r\n      {props.listItem.map((item, index) => {\r\n        const labelId = `checkbox-list-label-${item._id}`;\r\n        return (\r\n          <ListItem\r\n            key={index}\r\n            dense\r\n            button={props.itemButton}\r\n            onClick={\r\n              props.itemClicked ? props.itemClicked.bind(this, item._id) : null\r\n            }\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={props.itemChecked.indexOf(item._id) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{\r\n                  \"aria-labelledby\": labelId,\r\n                  readOnly: props.itemReadonly\r\n                }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId} primary={`${item.roomName}`} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ListComponent;\r\n","import React from \"react\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst DatePickerComponent = props => {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <DatePicker\r\n        openTo={props.view ? props.view : \"date\"}\r\n        format=\"HH:ii\"\r\n        label={props.label}\r\n        views={[\"year\", \"month\", \"date\"]}\r\n        value={props.selectedDate}\r\n        onChange={props.handleDateChange}\r\n        inputVariant=\"standard\"\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default DatePickerComponent;\r\n","import React from \"react\";\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst DatePickerComponent = props => {\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <TimePicker\r\n        clearable\r\n        ampm={true}\r\n        label={props.label}\r\n        value={props.selectedDate}\r\n        onChange={props.handleDateChange}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default DatePickerComponent;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst CheckBox = props => {\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          checked={props.checked}\r\n          onChange={props.handleChange}\r\n          name={props.name}\r\n          color={Boolean(props.color) ? props.color : \"primary\"}\r\n          inputProps={{ readOnly: props.readOnly }}\r\n        />\r\n      }\r\n      label={!Boolean(props.label) ? \"Checkbox\" : props.label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport {\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst ExpansionPanelComponent = props => {\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={Boolean(props.expanded) ? props.expanded : false}\r\n      onChange={Boolean(props.handleOpen) ? props.handleOpen : () => {}}\r\n    >\r\n      <ExpansionPanelSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1bh-content\"\r\n        id=\"panel1bh-header\"\r\n      >\r\n        {props.summary}\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>{props.details}</ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  );\r\n};\r\n\r\nexport default ExpansionPanelComponent;\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nconst AutoCompleteComponent = props => {\r\n  const {\r\n    value,\r\n    label,\r\n    options,\r\n    inputValue,\r\n    onChange,\r\n    onInputChange,\r\n    errorMessage\r\n  } = props;\r\n\r\n  const isError = Boolean(errorMessage);\r\n  return (\r\n    <Autocomplete\r\n      value={value}\r\n      onChange={onChange}\r\n      inputValue={inputValue}\r\n      onInputChange={onInputChange}\r\n      disabled={props.disabled}\r\n      options={options}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          // disabled={props.disabled}\r\n          variant={Boolean(props.variant) ? props.variant : \"standard\"}\r\n          error={isError}\r\n          helperText={isError ? errorMessage : \"\"}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AutoCompleteComponent;\r\n","import React from \"react\";\r\nimport getStyles from \"./loggedin.styles\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AppBarComponent, DrawerComponent } from \"../../components/components\";\r\n\r\nimport {\r\n  // LoginScreen,\r\n  DashboardScreen,\r\n  EmployeeScreen,\r\n  EmployeeEditScreen,\r\n  EmployeeAddScreen,\r\n  EmployeeDetailScreen,\r\n  RoomScreen,\r\n  RoomAddScreen,\r\n  NotFoundScreen,\r\n  RoomEditScreen,\r\n  ControlScreen,\r\n  AccessScreen,\r\n  AccessAddScreen,\r\n  AccessEditScreen,\r\n  WebScreen,\r\n  WebAddScreen,\r\n  WebEditScreen,\r\n  HolidayAddScreen,\r\n  HolidayScreen,\r\n  HolidayEditScreen,\r\n  WorkDayScreen,\r\n  WorkDayEditScreen,\r\n  WorkDayAddScreen,\r\n  DivisionScreen,\r\n  DivisionAddScreen,\r\n  DivisionEditScreen,\r\n  RouteScreen,\r\n  RouteAddScreen,\r\n  RouteEditScreen,\r\n  RouteGroupScreen,\r\n  RouteAddGroupScreen,\r\n  RouteEditGroupScreen,\r\n  RoleScreen,\r\n  RoleAddScreen,\r\n  RoleEditScreen,\r\n  UserApprovalScreen,\r\n  UserApprovalAddScreen,\r\n  UserApprovalEditScreen\r\n} from \"../screens\";\r\n\r\nconst LoggedInScreen = props => {\r\n  const classes = getStyles();\r\n  if (\r\n    Object.keys(props.auth.user).length === 0 ||\r\n    localStorage.getItem(\"token\") === \"\"\r\n  )\r\n    return <Redirect to=\"/login\" />;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBarComponent fullName={props.auth.user.fullname} />\r\n      <DrawerComponent />\r\n      <main className={classes.content}>\r\n        <Container maxWidth=\"xl\">\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={DashboardScreen} />\r\n            {/* <Route exact path=\"/login\" component={LoginScreen} /> */}\r\n            <Route exact path=\"/employee\" component={EmployeeScreen} />\r\n            <Route path=\"/employee/add\" component={EmployeeAddScreen} />\r\n            <Route\r\n              path=\"/employee/detail/:id\"\r\n              component={EmployeeDetailScreen}\r\n            />\r\n            <Route path=\"/employee/:id\" component={EmployeeEditScreen} />\r\n            <Route exact path=\"/room\" component={RoomScreen} />\r\n            <Route path=\"/room/add\" component={RoomAddScreen} />\r\n            <Route path=\"/room/:id\" component={RoomEditScreen} />\r\n            <Route exact path=\"/control\" component={ControlScreen} />\r\n            <Route exact path=\"/access\" component={AccessScreen} />\r\n            <Route path=\"/access/add\" component={AccessAddScreen} />\r\n            <Route path=\"/access/:id\" component={AccessEditScreen} />\r\n            <Route exact path=\"/web\" component={WebScreen} />\r\n            <Route path=\"/web/add\" component={WebAddScreen} />\r\n            <Route path=\"/web/:id\" component={WebEditScreen} />\r\n            <Route exact path=\"/holiday\" component={HolidayScreen} />\r\n            <Route path=\"/holiday/add\" component={HolidayAddScreen} />\r\n            <Route path=\"/holiday/:id\" component={HolidayEditScreen} />\r\n            <Route exact path=\"/workday\" component={WorkDayScreen} />\r\n            <Route path=\"/workday/add\" component={WorkDayAddScreen} />\r\n            <Route path=\"/workday/:id\" component={WorkDayEditScreen} />\r\n            <Route exact path=\"/division\" component={DivisionScreen} />\r\n            <Route path=\"/division/add\" component={DivisionAddScreen} />\r\n            <Route path=\"/division/:id\" component={DivisionEditScreen} />\r\n            <Route exact path=\"/route/group\" component={RouteGroupScreen} />\r\n            <Route\r\n              exact\r\n              path=\"/route/group/add\"\r\n              component={RouteAddGroupScreen}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/route/group/:id\"\r\n              component={RouteEditGroupScreen}\r\n            />\r\n            <Route exact path=\"/route\" component={RouteScreen} />\r\n            <Route path=\"/route/add\" component={RouteAddScreen} />\r\n            <Route path=\"/route/:id\" component={RouteEditScreen} />\r\n            <Route exact path=\"/role\" component={RoleScreen} />\r\n            <Route exact path=\"/role/add\" component={RoleAddScreen} />\r\n            <Route path=\"/role/:id\" component={RoleEditScreen} />\r\n            <Route exact path=\"/user/approval\" component={UserApprovalScreen} />\r\n            <Route\r\n              path=\"/user/approval/add\"\r\n              component={UserApprovalAddScreen}\r\n            />\r\n            <Route\r\n              path=\"/user/approval/:id\"\r\n              component={UserApprovalEditScreen}\r\n            />\r\n            <Route component={NotFoundScreen} />\r\n          </Switch>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.auth\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(LoggedInScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\r\n\r\nimport { PaperComponent, TableComponent } from \"../../components/components\";\r\nclass DashboardScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Dashboard</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} xs={12}>\r\n            <PaperComponent paperTitle={\"Employees\"}></PaperComponent>\r\n          </Grid>\r\n          <Grid item lg={4} xs={12}>\r\n            <PaperComponent paperTitle={\"Rooms\"}></PaperComponent>\r\n          </Grid>\r\n          <Grid item lg={4} xs={12}>\r\n            <PaperComponent paperTitle={\"Devices\"}></PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent tableTitle={\"Recent Access Activity\"} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardScreen;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  getEmployees,\r\n  deleteEmployee,\r\n  getDivisions\r\n} from \"../../redux/actions/actions\";\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass EmployeeScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getEmployees();\r\n  }\r\n\r\n  handlerDelete = id => {\r\n    this.props.deleteEmployee(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/employee/${id}`);\r\n  };\r\n\r\n  handlerDetail = id => {\r\n    this.props.history.push(`/employee/detail/${id}`);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.employee);\r\n    const field = [\r\n      { title: \"Employee Name\", field: \"fullname\" },\r\n      { title: \"NIP\", field: \"nip\" },\r\n      { title: \"Division\", field: \"division.name\" },\r\n      { title: \"Gender\", field: \"gender\" }\r\n    ];\r\n\r\n    const { employees } = this.props.employee;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Employee</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/employee/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Employee\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Employees Data Table\"}\r\n              tableColumns={field}\r\n              tableData={employees}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  employee: state.employee,\r\n  division: state.division\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getEmployees,\r\n    deleteEmployee,\r\n    getDivisions\r\n  }\r\n)(EmployeeScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  editEmployee,\r\n  getRooms,\r\n  getEmployee,\r\n  getRoles,\r\n  getDivisions\r\n} from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent,\r\n  ListComponent,\r\n  AutoComplete\r\n} from \"../../components/components\";\r\nclass EmployeeEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      fullname: \"\",\r\n      email: \"\",\r\n      division: \"\",\r\n      gender: \"\",\r\n      rfid: \"\",\r\n      nip: \"\",\r\n      rooms: [],\r\n      role: \"\",\r\n      inputRole: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getEmployee(this.props.match.params.id);\r\n    this.props.getRooms();\r\n    this.props.getRoles();\r\n    this.props.getDivisions();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.employee.employee !== this.props.employee.employee) {\r\n      const {\r\n        fullname,\r\n        nip,\r\n        email,\r\n        division,\r\n        gender,\r\n        rfid,\r\n        rooms,\r\n        role\r\n      } = nextProps.employee.employee;\r\n\r\n      this.setState({\r\n        fullname,\r\n        nip,\r\n        email,\r\n        division,\r\n        gender,\r\n        rfid,\r\n        rooms: rooms ? rooms : [],\r\n        role: `${role.name} - ${role._id}`\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const roleId = this.state.role.split(\"-\")[1];\r\n\r\n    this.props.editEmployee(this.props.match.params.id, {\r\n      ...this.state,\r\n      role: Boolean(roleId) ? roleId.trim() : \"\"\r\n    });\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      division: \"\",\r\n      gender: \"\",\r\n      rfid: \"\",\r\n      nip: \"\",\r\n      rooms: [],\r\n      role: \"\",\r\n      inputRole: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleToggle = (value, e) => {\r\n    e.preventDefault();\r\n    const currentIndex = this.state.rooms.indexOf(value);\r\n    const newChecked = [...this.state.rooms];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({ rooms: newChecked });\r\n  };\r\n  handleRoleChange = (e, value) => {\r\n    this.setState({\r\n      role: value\r\n    });\r\n  };\r\n\r\n  handleInputRoleChange = (e, value) => {\r\n    this.setState({\r\n      inputRole: value\r\n    });\r\n  };\r\n  render() {\r\n    const { rooms } = this.props.room;\r\n    const { divisions } = this.props.division;\r\n    const { roles } = this.props.role;\r\n    const { success } = this.props.employee;\r\n    if (success) return <Redirect to=\"/employee\" />;\r\n\r\n    let divisionsList = [];\r\n\r\n    divisions.map((div, index) => (\r\n      <div key={index}>\r\n        {divisionsList.push({\r\n          itemValue: div._id,\r\n          itemName: div.name\r\n        })}\r\n      </div>\r\n    ));\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Edit Employee</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"fullname\"}\r\n                fieldLabel={\"Employee Name\"}\r\n                fieldValue={this.state.fullname}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"nip\"}\r\n                fieldLabel={\"NIP\"}\r\n                fieldValue={this.state.nip}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"email\"}\r\n                fieldLabel={\"Email\"}\r\n                fieldValue={this.state.email}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              {/* <TextFieldComponent\r\n                fieldName={\"division\"}\r\n                fieldLabel={\"Division Name\"}\r\n                fieldValue={this.state.division}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              /> */}\r\n              <SelectComponent\r\n                fieldName={\"division\"}\r\n                fieldLabel={\"Division Name\"}\r\n                fieldValue={this.state.division}\r\n                fieldItem={divisionsList}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"gender\"}\r\n                fieldLabel={\"Gender\"}\r\n                fieldValue={this.state.gender}\r\n                fieldItem={[\r\n                  { itemValue: \"Male\", itemName: \"Male\" },\r\n                  { itemValue: \"Female\", itemName: \"Female\" }\r\n                ]}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"rfid\"}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldLabel={\"RFID Number\"}\r\n                fieldValue={this.state.rfid}\r\n              />\r\n              <AutoComplete\r\n                value={this.state.role}\r\n                inputValue={this.state.inputRole}\r\n                onChange={this.handleRoleChange.bind(this)}\r\n                onInputChange={this.handleInputRoleChange.bind(this)}\r\n                options={roles.map(role => `${role.name} - ${role._id}`)}\r\n                label=\"Select Role\"\r\n                errorMessage={null}\r\n              />\r\n\r\n              {/* eslint-disable-next-line react/jsx-no-comment-textnodes*/}\r\n              <Typography variant=\"h6\">Room Access: </Typography>\r\n              {/* eslint-disable-next-line eqeqeq*/}\r\n              {this.state.rooms != undefined ? (\r\n                <ListComponent\r\n                  itemClicked={this.handleToggle}\r\n                  listItem={rooms}\r\n                  itemChecked={this.state.rooms}\r\n                />\r\n              ) : null}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Delete Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room,\r\n  employee: state.employee,\r\n  role: state.role,\r\n  division: state.division\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    editEmployee,\r\n    getRooms,\r\n    getEmployee,\r\n    getRoles,\r\n    getDivisions\r\n  }\r\n)(EmployeeEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  addEmployee,\r\n  getRooms,\r\n  getRoles,\r\n  getDivisions\r\n} from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent,\r\n  ListComponent,\r\n  AutoComplete\r\n} from \"../../components/components\";\r\n\r\nclass EmployeeAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      fullname: \"\",\r\n      email: \"\",\r\n      division: \"\",\r\n      gender: \"\",\r\n      rfid: \"\",\r\n      rooms: [],\r\n      role: \"\",\r\n      inputRole: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRooms();\r\n    this.props.getRoles();\r\n    this.props.getDivisions();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    const roleId = this.state.role.split(\"-\")[1];\r\n    e.preventDefault();\r\n    this.props.addEmployee({\r\n      ...this.state,\r\n      role: Boolean(roleId) ? roleId.trim() : \"\"\r\n    });\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      fullname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      repassword: \"\",\r\n      division: \"\",\r\n      gender: \"\",\r\n      rfid: \"\",\r\n      nip: \"\",\r\n      rooms: [],\r\n      role: \"\",\r\n      inputRole: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleToggle = (value, e) => {\r\n    e.preventDefault();\r\n    const currentIndex = this.state.rooms.indexOf(value);\r\n    const newChecked = [...this.state.rooms];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({ rooms: newChecked });\r\n  };\r\n\r\n  handleRoleChange = (e, value) => {\r\n    this.setState({\r\n      role: value\r\n    });\r\n  };\r\n\r\n  handleInputRoleChange = (e, value) => {\r\n    this.setState({\r\n      inputRole: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { rooms } = this.props.room;\r\n    const { divisions } = this.props.division;\r\n    const { roles } = this.props.role;\r\n    const { success } = this.props.employee;\r\n    let divisionsList = [];\r\n\r\n    divisions.map((div, index) => (\r\n      <div key={index}>\r\n        {divisionsList.push({\r\n          itemValue: div._id,\r\n          itemName: div.name\r\n        })}\r\n      </div>\r\n    ));\r\n    if (success) return <Redirect to=\"/employee\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Employee</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"fullname\"}\r\n                fieldLabel={\"Employee name\"}\r\n                fieldValue={this.state.fullname}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"nip\"}\r\n                fieldLabel={\"NIP\"}\r\n                fieldValue={this.state.nip}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"email\"}\r\n                fieldLabel={\"Email\"}\r\n                fieldValue={this.state.email}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"password\"}\r\n                fieldLabel={\"Password\"}\r\n                fieldValue={this.state.password}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldType={\"password\"}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"repassword\"}\r\n                fieldLabel={\"Re-Password\"}\r\n                fieldValue={this.state.repassword}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldType={\"password\"}\r\n              />\r\n              {/* <TextFieldComponent\r\n                fieldName={\"division\"}\r\n                fieldLabel={\"Division Name\"}\r\n                fieldValue={this.state.division}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              /> */}\r\n              <SelectComponent\r\n                fieldName={\"division\"}\r\n                fieldLabel={\"Division Name\"}\r\n                fieldValue={this.state.division}\r\n                fieldItem={divisionsList}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"gender\"}\r\n                fieldLabel={\"Gender\"}\r\n                fieldValue={this.state.gender}\r\n                fieldItem={[\r\n                  { itemValue: \"Male\", itemName: \"Male\" },\r\n                  { itemValue: \"Female\", itemName: \"Female\" }\r\n                ]}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"rfid\"}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldLabel={\"RFID Number\"}\r\n                fieldValue={this.state.rfid}\r\n              />\r\n              <AutoComplete\r\n                value={this.state.role}\r\n                inputValue={this.state.inputRole}\r\n                onChange={this.handleRoleChange.bind(this)}\r\n                onInputChange={this.handleInputRoleChange.bind(this)}\r\n                options={roles.map(role => {\r\n                  return `${role.name} - ${role._id}`;\r\n                })}\r\n                label=\"Select Role\"\r\n                errorMessage={null}\r\n              />\r\n\r\n              <Typography variant=\"h6\">Room Access: </Typography>\r\n              <ListComponent\r\n                itemClicked={this.handleToggle}\r\n                listItem={rooms}\r\n                itemChecked={this.state.rooms}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room,\r\n  employee: state.employee,\r\n  role: state.role,\r\n  division: state.division\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    addEmployee,\r\n    getRooms,\r\n    getRoles,\r\n    getDivisions\r\n  }\r\n)(EmployeeAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { getEmployee } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent,\r\n  ListComponent\r\n} from \"../../components/components\";\r\nclass EmployeeDetailScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      fullname: \"\",\r\n      nip: \"\",\r\n      email: \"\",\r\n      division: \"\",\r\n      gender: \"\",\r\n      rfid: \"\",\r\n      rooms: [],\r\n      role: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getEmployee(this.props.match.params.id);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.employee.employee !== this.props.employee.employee) {\r\n      const {\r\n        fullname,\r\n        nip,\r\n        email,\r\n        division,\r\n        gender,\r\n        rfid,\r\n        rooms,\r\n        role\r\n      } = nextProps.employee.employee;\r\n\r\n      this.setState({\r\n        fullname,\r\n        nip,\r\n        email,\r\n        division,\r\n        gender,\r\n        rfid,\r\n        rooms: rooms ? rooms : [],\r\n        role: `${role.name} - ${role._id}`\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { success } = this.props.employee;\r\n\r\n    if (success) return <Redirect to=\"/employee\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Detail Employee</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"fullname\"}\r\n                fieldLabel={\"Employee Name\"}\r\n                fieldValue={this.state.fullname}\r\n                fieldChanged={() => {}}\r\n                fieldReadonly={true}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"nip\"}\r\n                fieldLabel={\"NIP\"}\r\n                fieldValue={this.state.nip}\r\n                fieldChanged={() => {}}\r\n                fieldReadonly={true}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"email\"}\r\n                fieldLabel={\"Email\"}\r\n                fieldValue={this.state.email}\r\n                fieldChanged={() => {}}\r\n                fieldReadonly={true}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"division\"}\r\n                fieldLabel={\"Division Name\"}\r\n                fieldValue={this.state.division}\r\n                fieldChanged={() => {}}\r\n                fieldReadonly={true}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"gender\"}\r\n                fieldLabel={\"Gender\"}\r\n                fieldValue={this.state.gender}\r\n                fieldItem={[\r\n                  { itemValue: \"Male\", itemName: \"Male\" },\r\n                  { itemValue: \"Female\", itemName: \"Female\" }\r\n                ]}\r\n                fieldChanged={() => {}}\r\n                fieldReadonly={true}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"rfid\"}\r\n                fieldChanged={() => {}}\r\n                fieldLabel={\"RFID Number\"}\r\n                fieldValue={this.state.rfid}\r\n                fieldReadonly={true}\r\n              />\r\n\r\n              <Typography variant=\"h6\">Room Access: </Typography>\r\n              <ListComponent\r\n                listItem={this.state.rooms}\r\n                itemChecked={this.state.rooms.map(room => room._id)}\r\n                itemButton={false}\r\n              />\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room,\r\n  employee: state.employee\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getEmployee\r\n  }\r\n)(EmployeeDetailScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { getRooms, deleteRoom } from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass RoomScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getRooms();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteRoom(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/room/${id}`);\r\n  };\r\n\r\n  handlerDetail = id => {\r\n    // this.props.history.push(`/employee/detail/${id}`);\r\n  };\r\n  render() {\r\n    const { rooms } = this.props.room;\r\n\r\n    const field = [\r\n      { title: \"Room Name\", field: \"roomName\" },\r\n      { title: \"Description\", field: \"description\" },\r\n      { title: \"Category\", field: \"category\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Rooms</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/room/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Room\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Rooms Data Table\"}\r\n              tableColumns={field}\r\n              tableData={rooms}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRooms, deleteRoom }\r\n)(RoomScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addRoom } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent\r\n} from \"../../components/components\";\r\n\r\nclass RoomAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      roomName: \"\",\r\n      description: \"\",\r\n      category: \"\"\r\n    };\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addRoom(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      location: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.room;\r\n    if (success) return <Redirect to=\"/room\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Room</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"roomName\"}\r\n                fieldLabel={\"Device Name\"}\r\n                fieldValue={this.state.roomName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"description\"}\r\n                fieldLabel={\"Description\"}\r\n                fieldValue={this.state.description}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"category\"}\r\n                fieldLabel={\"Category\"}\r\n                fieldValue={this.state.category}\r\n                fieldItem={[\r\n                  { itemValue: \"Room\", itemName: \"Room\" },\r\n                  { itemValue: \"Drawer\", itemName: \"Drawer\" }\r\n                ]}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addRoom }\r\n)(RoomAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { editRoom, getRoom } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent\r\n} from \"../../components/components\";\r\n\r\nclass RoomEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      roomName: \"\",\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRoom(this.props.match.params.id);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextprops) {\r\n    this.setState({\r\n      roomName: nextprops.room.room.roomName,\r\n      description: nextprops.room.room.description\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editRoom(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      roomName: \"\",\r\n      description: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.room;\r\n    if (success) return <Redirect to=\"/room\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Employee</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"roomName\"}\r\n                fieldLabel={\"Device Name\"}\r\n                fieldValue={this.state.roomName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"description\"}\r\n                fieldLabel={\"Description\"}\r\n                fieldValue={this.state.description}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editRoom, getRoom }\r\n)(RoomEditScreen);\r\n","import mqtt from \"mqtt\";\r\n\r\nexport const clientMqtt = () => mqtt.connect(\"ws://192.168.1.123:9001\");\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getAccesses, deleteAccess } from \"../../redux/actions/actions\";\r\nimport {\r\n  TableComponent,\r\n  PaperComponent,\r\n  AlertComponent\r\n} from \"../../components/components\";\r\n\r\nclass AccessScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getAccesses();\r\n  }\r\n\r\n  handlerDelete = id => {\r\n    this.props.deleteAccess(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/access/${id}`);\r\n  };\r\n\r\n  handlerDetail = id => {\r\n    // this.props.history.push(`/employee/detail/${id}`);\r\n  };\r\n  render() {\r\n    console.log(this.props.access);\r\n    const { accesses } = this.props.access;\r\n    const field = [\r\n      { title: \"Label Access\", field: \"labelName\" },\r\n      { title: \"Category\", field: \"room.category\" },\r\n      { title: \"Assigned To\", field: \"room.roomName\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Access</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/access/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Access\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Access Data Table\"}\r\n              tableColumns={field}\r\n              tableData={accesses}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  access: state.access\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getAccesses, deleteAccess }\r\n)(AccessScreen);\r\n","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_ACCESS,\r\n  LOADED_ACCESS,\r\n  LOADED_ACCESSES,\r\n  DELETE_ACCESS,\r\n  ERROR_ACCESS,\r\n  SUCCESS_ACCESS\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\"\r\n\r\nexport const getAccesses = () => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ACCESS\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/access\")\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ACCESSES,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ACCESS);\r\n    });\r\n};\r\n\r\nexport const getAccess = id => dispatch => {\r\n  dispatch({\r\n    type: LOADING_ACCESS\r\n  });\r\n\r\n  return axios()\r\n    .get(`/access/${id}`)\r\n    .then(res => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_ACCESS,\r\n        payload: data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ACCESS);\r\n    });\r\n};\r\n\r\nexport const addAccess = access => dispatch => {\r\n  return axios()\r\n    .post(\"/access\", access)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ACCESS,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ACCESS);\r\n    });\r\n};\r\n\r\nexport const editAccess = (id, access, callback) => dispatch => {\r\n  return axios()\r\n    .patch(`/access/${id}`, access)\r\n    .then(res => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_ACCESS,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ACCESS);\r\n    });\r\n};\r\n\r\nexport const deleteAccess = id => dispatch => {\r\n  return axios()\r\n    .delete(`/access/${id}`)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_ACCESS,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message\r\n        }\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch(err => {\r\n      return HTTPHandler(err, dispatch, ERROR_ACCESS);\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport cryptoRandomString from \"crypto-random-string\";\r\n\r\nimport { getRooms, addAccess } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent,\r\n  AlertComponent\r\n} from \"../../components/components\";\r\n\r\nclass AccessAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      uniqueNumber: \"\",\r\n      labelName: \"\",\r\n      selectedCategory: \"\",\r\n      room: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRooms();\r\n\r\n    this.setState({\r\n      uniqueNumber: cryptoRandomString({\r\n        length: 30\r\n      }).toLocaleLowerCase()\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addAccess(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      uniqueNumber: \"\",\r\n      labelName: \"\",\r\n      selectedCategory: \"\",\r\n      room: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    const { rooms } = this.props.room;\r\n    const { success } = this.props.access;\r\n    if (success) return <Redirect to=\"/access\" />;\r\n\r\n    let selectedCategoryRoom =\r\n      this.state.selectedCategory !== \"\" ||\r\n      this.state.selectedCategory !== undefined\r\n        ? rooms.filter(room => room.category === this.state.selectedCategory)\r\n        : rooms;\r\n\r\n    console.log(this.state.uniqueNumber);\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Access</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"uniqueNumber\"}\r\n                fieldLabel={\"Unique Number\"}\r\n                fieldValue={this.state.uniqueNumber}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldDisabled={true}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"labelName\"}\r\n                fieldLabel={\"Label Access\"}\r\n                fieldValue={this.state.labelName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <SelectComponent\r\n                fieldName={\"selectedCategory\"}\r\n                fieldLabel={\"Category\"}\r\n                fieldValue={this.state.selectedCategory}\r\n                fieldItem={[\r\n                  { itemValue: \"Room\", itemName: \"Room\" },\r\n                  { itemValue: \"Drawer\", itemName: \"Drawer\" }\r\n                ]}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"room\"}\r\n                fieldLabel={\"Select Location\"}\r\n                fieldValue={this.state.room}\r\n                fieldItem={selectedCategoryRoom.map(cr => ({\r\n                  itemValue: cr._id,\r\n                  itemName: cr.roomName\r\n                }))}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room,\r\n  access: state.access\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRooms, addAccess }\r\n)(AccessAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { getRooms, editAccess, getAccess } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent,\r\n  AlertComponent\r\n} from \"../../components/components\";\r\n\r\nclass AccessEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      uniqueNumber: \"\",\r\n      labelName: \"\",\r\n      selectedCategory: \"\",\r\n      room: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getAccess(this.props.match.params.id);\r\n    this.props.getRooms();\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    let nextPropsRoom = nextProps.access.access.room;\r\n    this.setState({\r\n      uniqueNumber: nextProps.access.access.uniqueNumber,\r\n      labelName: nextProps.access.access.labelName,\r\n      room: nextPropsRoom === undefined ? \"\" : nextProps.access.access.room._id,\r\n      selectedCategory:\r\n        nextPropsRoom === undefined ? \"\" : nextProps.access.access.room.category\r\n      // room: nextProps.access.access.room._id\r\n      // selectedCategory: nextProps.access.access.room.category\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editAccess(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      uniqueNumber: \"\",\r\n      labelName: \"\",\r\n      selectedCategory: \"\",\r\n      room: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    console.log(this.props.access);\r\n    const { rooms } = this.props.room;\r\n    const { success } = this.props.access;\r\n    if (success) return <Redirect to=\"/access\" />;\r\n\r\n    let selectedCategoryRoom =\r\n      this.state.selectedCategory !== \"\" ||\r\n      this.state.selectedCategory !== undefined\r\n        ? rooms.filter(room => room.category === this.state.selectedCategory)\r\n        : rooms;\r\n\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Edit Access</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"uniqueNumber\"}\r\n                fieldLabel={\"Unique Number\"}\r\n                fieldValue={this.state.uniqueNumber}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldDisabled={true}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"labelName\"}\r\n                fieldLabel={\"Label Access\"}\r\n                fieldValue={this.state.labelName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <SelectComponent\r\n                fieldName={\"selectedCategory\"}\r\n                fieldLabel={\"Category\"}\r\n                fieldValue={this.state.selectedCategory}\r\n                fieldItem={[\r\n                  { itemValue: \"Room\", itemName: \"Room\" },\r\n                  { itemValue: \"Drawer\", itemName: \"Drawer\" }\r\n                ]}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"room\"}\r\n                fieldLabel={\"Select Location\"}\r\n                fieldValue={this.state.room}\r\n                fieldItem={selectedCategoryRoom.map(cr => ({\r\n                  itemValue: cr._id,\r\n                  itemName: cr.roomName\r\n                }))}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  room: state.room,\r\n  access: state.access\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRooms, getAccess, editAccess }\r\n)(AccessEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { getWebs, deleteWeb } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  TableComponent,\r\n  PaperComponent,\r\n  AlertComponent\r\n} from \"../../components/components\";\r\n\r\nclass RoomScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getWebs();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteWeb(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/web/${id}`);\r\n  };\r\n\r\n  handlerDetail = id => {};\r\n\r\n  render() {\r\n    const { webs } = this.props.web;\r\n\r\n    const field = [\r\n      { title: \"Web Name\", field: \"webName\" },\r\n      { title: \"Web URL\", field: \"webURL\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Webs</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/web/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Web\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Web Data Table\"}\r\n              tableColumns={field}\r\n              tableData={webs}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  web: state.web\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getWebs, deleteWeb }\r\n)(RoomScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addWeb } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  AlertComponent\r\n} from \"../../components/components\";\r\n\r\nclass WebAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      webName: \"\",\r\n      webURL: \"\"\r\n    };\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addWeb(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      webName: \"\",\r\n      webURL: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.web;\r\n    if (success) return <Redirect to=\"/web\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Web</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"webName\"}\r\n                fieldLabel={\"Web Name\"}\r\n                fieldValue={this.state.webName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"webURL\"}\r\n                fieldLabel={\"Web URL\"}\r\n                fieldValue={this.state.webURL}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  web: state.web\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addWeb }\r\n)(WebAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { editWeb, getWeb } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  AlertComponent\r\n} from \"../../components/components\";\r\n\r\nclass WebEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      webName: \"\",\r\n      webURL: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getWeb(this.props.match.params.id);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextprops) {\r\n    this.setState({\r\n      webName: nextprops.web.web.webName,\r\n      webURL: nextprops.web.web.webURL\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editWeb(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      webName: \"\",\r\n      webURL: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.web;\r\n    console.log(success);\r\n    if (success) return <Redirect to=\"/web\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Web</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"webName\"}\r\n                fieldLabel={\"Device Name\"}\r\n                fieldValue={this.state.webName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"webURL\"}\r\n                fieldLabel={\"Web URL\"}\r\n                fieldValue={this.state.webURL}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  web: state.web\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editWeb, getWeb }\r\n)(WebEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { getHolidays, deleteHoliday } from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass HolidayScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getHolidays();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteHoliday(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/holiday/${id}`);\r\n  };\r\n\r\n  handlerDetail = id => {\r\n    // this.props.history.push(`/employee/detail/${id}`);\r\n  };\r\n  render() {\r\n    const { holidays } = this.props.holiday;\r\n\r\n    const field = [\r\n      { title: \"Date\", field: \"date\" },\r\n      { title: \"Description\", field: \"description\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Holiday</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/holiday/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Holiday\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Holiday Data Table\"}\r\n              tableColumns={field}\r\n              tableData={holidays}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  holiday: state.holiday\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getHolidays, deleteHoliday }\r\n)(HolidayScreen);\r\n","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_HOLIDAY,\r\n  LOADED_HOLIDAY,\r\n  LOADED_HOLIDAYS,\r\n  DELETE_HOLIDAY,\r\n  ERROR_HOLIDAY,\r\n  SUCCESS_HOLIDAY,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getHolidays = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_HOLIDAY,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/holiday\")\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_HOLIDAYS,\r\n        payload: data,\r\n      });\r\n\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_HOLIDAY);\r\n    });\r\n};\r\n\r\nexport const getHoliday = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_HOLIDAY,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/holiday/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_HOLIDAY,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_HOLIDAY);\r\n    });\r\n};\r\n\r\nexport const addHoliday = (holiday) => (dispatch) => {\r\n  return axios()\r\n    .post(\"/holiday\", holiday)\r\n    .then((res) => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_HOLIDAY,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_HOLIDAY);\r\n    });\r\n};\r\n\r\nexport const editHoliday = (id, holiday, callback) => (dispatch) => {\r\n  return axios()\r\n    .put(`/holiday/${id}`, holiday)\r\n    .then((res) => {\r\n      // console.log(holiday);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_HOLIDAY,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_HOLIDAY);\r\n    });\r\n};\r\n\r\nexport const deleteHoliday = (id) => (dispatch) => {\r\n  return axios()\r\n    .delete(`/holiday/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_HOLIDAY,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_HOLIDAY);\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addHoliday } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  DatePickerComponent\r\n} from \"../../components/components\";\r\n\r\nclass HolidayAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      date: new Date(),\r\n      description: \"\"\r\n    };\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addHoliday(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      date: \"\",\r\n      description: \"\"\r\n    });\r\n  };\r\n\r\n  handleDateChange = date => {\r\n    this.setState({\r\n      date: date\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.holiday;\r\n    if (success) return <Redirect to=\"/holiday\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Holiday</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <DatePickerComponent\r\n                label={\"Holiday Date\"}\r\n                handleDateChange={this.handleDateChange.bind(this)}\r\n                selectedDate={this.state.date}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"description\"}\r\n                fieldLabel={\"Description\"}\r\n                fieldValue={this.state.description}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  holiday: state.holiday\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addHoliday }\r\n)(HolidayAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { editHoliday, getHoliday } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  DatePickerComponent\r\n} from \"../../components/components\";\r\n\r\nclass HolidayEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      date: new Date(),\r\n      description: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getHoliday(this.props.match.params.id);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextprops) {\r\n    this.setState({\r\n      date: nextprops.holiday.holiday.date,\r\n      description: nextprops.holiday.holiday.description\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editHoliday(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      date: \"\",\r\n      description: \"\"\r\n    });\r\n  };\r\n\r\n  handleDateChange = date => {\r\n    this.setState({\r\n      date: date\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.holiday;\r\n    console.log(success);\r\n    if (success) return <Redirect to=\"/holiday\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Edit Holiday</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <DatePickerComponent\r\n                label={\"Holiday Date\"}\r\n                handleDateChange={this.handleDateChange.bind(this)}\r\n                selectedDate={this.state.date}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"description\"}\r\n                fieldLabel={\"Description\"}\r\n                fieldValue={this.state.description}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  holiday: state.holiday\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editHoliday, getHoliday }\r\n)(HolidayEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\nimport moment from \"moment\";\r\n\r\nimport { getWorkDays, deleteWorkDay } from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass WorkdayScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getWorkDays();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteWorkDay(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/workday/${id}`);\r\n  };\r\n  handlerDetail = id => {};\r\n  render() {\r\n    const { workDays } = this.props.workDay;\r\n\r\n    const data = workDays.map(w => {\r\n      w.come = moment(w.time.come).format(\"hh:mm:ss a\");\r\n      w.back = moment(w.time.back).format(\"hh:mm:ss a\");\r\n\r\n      return w;\r\n    });\r\n\r\n    const field = [\r\n      { title: \"Day Code\", field: \"dayCode\" },\r\n      { title: \"Day Name\", field: \"dayName\" },\r\n      { title: \"Time Come\", field: \"come\" },\r\n      { title: \"Time Back\", field: \"back\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Work Day</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/workday/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Work Day\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Work Day Data Table\"}\r\n              tableColumns={field}\r\n              tableData={data}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  workDay: state.workDay\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getWorkDays, deleteWorkDay }\r\n)(WorkdayScreen);\r\n","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_WORKDAY,\r\n  LOADED_WORKDAY,\r\n  LOADED_WORKDAYS,\r\n  DELETE_WORKDAY,\r\n  ERROR_WORKDAY,\r\n  SUCCESS_WORKDAY,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getWorkDays = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_WORKDAY,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/workDay\")\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_WORKDAYS,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WORKDAY);\r\n    });\r\n};\r\n\r\nexport const getWorkDay = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_WORKDAY,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/workDay/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_WORKDAY,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WORKDAY);\r\n    });\r\n};\r\n\r\nexport const addWorkDay = (workDay) => (dispatch) => {\r\n  return axios()\r\n    .post(\"/workDay\", workDay)\r\n    .then((res) => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_WORKDAY,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WORKDAY);\r\n    });\r\n};\r\n\r\nexport const editWorkDay = (id, workDay, callback) => (dispatch) => {\r\n  return axios()\r\n    .put(`/workDay/${id}`, workDay)\r\n    .then((res) => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_WORKDAY,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WORKDAY);\r\n    });\r\n};\r\n\r\nexport const deleteWorkDay = (id) => (dispatch) => {\r\n  return axios()\r\n    .delete(`/workDay/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_WORKDAY,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_WORKDAY);\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addWorkDay } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  TimePickerComponent\r\n} from \"../../components/components\";\r\n\r\nclass WorkDayAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      dayName: \"\",\r\n      dayCode: \"\",\r\n      timeCome: new Date(),\r\n      timeBack: new Date()\r\n    };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addWorkDay(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      dayName: \"\",\r\n      dayCode: \"\",\r\n      timeCome: new Date(),\r\n      timeBack: new Date()\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleTimeComeChange = date => {\r\n    this.setState({\r\n      timeCome: date\r\n    });\r\n  };\r\n\r\n  handleTimeBackChange = date => {\r\n    this.setState({\r\n      timeBack: date\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.workDay;\r\n    console.log(success);\r\n    if (success) return <Redirect to=\"/workDay\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Work Day</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"dayName\"}\r\n                fieldLabel={\"Day Name\"}\r\n                fieldValue={this.state.dayName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"dayCode\"}\r\n                fieldLabel={\"Day Code\"}\r\n                fieldValue={this.state.dayCode}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TimePickerComponent\r\n                handleDateChange={this.handleTimeComeChange.bind(this)}\r\n                selectedDate={this.state.timeCome}\r\n                label=\"Time Come\"\r\n              />\r\n              <TimePickerComponent\r\n                handleDateChange={this.handleTimeBackChange.bind(this)}\r\n                selectedDate={this.state.timeBack}\r\n                label=\"Time Back\"\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  workDay: state.workDay\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addWorkDay }\r\n)(WorkDayAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { editWorkDay, getWorkDay } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  TimePickerComponent\r\n} from \"../../components/components\";\r\n\r\nclass WorkDayEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      dayName: \"\",\r\n      dayCode: \"\",\r\n      timeCome: \"\",\r\n      timeBack: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getWorkDay(this.props.match.params.id);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextprops) {\r\n    const { dayName, dayCode, time } = nextprops.workDay.workDay;\r\n    this.setState({\r\n      dayName: dayName,\r\n      dayCode: dayCode,\r\n      timeCome: time ? time.come : null,\r\n      timeBack: time ? time.back : null\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editWorkDay(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      dayName: \"\",\r\n      dayCode: \"\",\r\n      timeCome: \"\",\r\n      timeBack: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleTimeComeChange = date => {\r\n    this.setState({\r\n      timeCome: date\r\n    });\r\n  };\r\n\r\n  handleTimeBackChange = date => {\r\n    this.setState({\r\n      timeBack: date\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.workDay;\r\n    console.log(success);\r\n    if (success) return <Redirect to=\"/workDay\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Edit Work Day</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"dayName\"}\r\n                fieldLabel={\"Day Name\"}\r\n                fieldValue={this.state.dayName}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"dayCode\"}\r\n                fieldLabel={\"Day Code\"}\r\n                fieldValue={this.state.dayCode}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TimePickerComponent\r\n                handleDateChange={this.handleTimeComeChange.bind(this)}\r\n                selectedDate={this.state.timeCome}\r\n                label=\"Time Come\"\r\n              />\r\n              <TimePickerComponent\r\n                handleDateChange={this.handleTimeBackChange.bind(this)}\r\n                selectedDate={this.state.timeBack}\r\n                label=\"Time Back\"\r\n              />\r\n              <br />\r\n              <br />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  workDay: state.workDay\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editWorkDay, getWorkDay }\r\n)(WorkDayEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { getDivisions, deleteDivision } from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass DivisionScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getDivisions();\r\n  }\r\n\r\n  handlerDelete = id => {\r\n    this.props.deleteDivision(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/division/${id}`);\r\n  };\r\n  render() {\r\n    const { divisions } = this.props.division;\r\n\r\n    const field = [{ title: \"Division Name\", field: \"name\" }];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Division</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/division/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Division\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Division Data Table\"}\r\n              tableColumns={field}\r\n              tableData={divisions}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  division: state.division\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getDivisions, deleteDivision }\r\n)(DivisionScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addDivision } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent\r\n} from \"../../components/components\";\r\n\r\nclass DivisionAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\"\r\n    };\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addDivision(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.division;\r\n    if (success) return <Redirect to=\"/division\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Division</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Division Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  division: state.division\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addDivision }\r\n)(DivisionAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { editDivision, getDivision } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent\r\n} from \"../../components/components\";\r\n\r\nclass DivisionEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getDivision(this.props.match.params.id);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextprops) {\r\n    this.setState({\r\n      name: nextprops.division.division.name\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editDivision(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.division;\r\n    if (success) return <Redirect to=\"/division\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Edit Division</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Division Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  division: state.division\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editDivision, getDivision }\r\n)(DivisionEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { getRoutes, deleteRoute } from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass RoomScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getRoutes();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteRoute(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/route/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { routes } = this.props.route;\r\n\r\n    const field = [\r\n      { title: \"Route Name\", field: \"name\" },\r\n      { title: \"Route Method\", field: \"method\" },\r\n      { title: \"Route Path\", field: \"path\" },\r\n      { title: \"Created At\", field: \"createdAt\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Routes</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/route/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Route\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Route Data Table\"}\r\n              tableColumns={field}\r\n              tableData={routes.map(route => {\r\n                route.method = route.method.toUpperCase();\r\n\r\n                return route;\r\n              })}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  route: state.route\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRoutes, deleteRoute }\r\n)(RoomScreen);\r\n","import React from \"react\";\r\nimport { ExpansionPanel, CheckBox } from \"../../../components/components\";\r\n\r\nconst WebAccesses = props => {\r\n  const { web } = props;\r\n  const selectedWeb = props.selectedWebs.find(\r\n    selectedWeb => selectedWeb.web == web._id\r\n  );\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={Boolean(selectedWeb)}\r\n      summary={\r\n        <CheckBox\r\n          label={web.webName}\r\n          name=\"webAccesses\"\r\n          handleChange={props.handleCheckBoxChange}\r\n          checked={Boolean(selectedWeb)}\r\n          color=\"secondary\"\r\n          readOnly={props.readOnly}\r\n        />\r\n      }\r\n      details={\r\n        <>\r\n          &emsp;\r\n          <CheckBox\r\n            label={\"Must Authorize\"}\r\n            name=\"mustAuthenticate\"\r\n            handleChange={props.handleMustAuthenticate}\r\n            checked={\r\n              Boolean(selectedWeb) ? selectedWeb.mustAuthenticate : false\r\n            }\r\n            color=\"secondary\"\r\n          />\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default WebAccesses;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addRoute, getWebs } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent\r\n} from \"../../components/components\";\r\n\r\nimport WebAccess from \"./Form/WebAccess.route\";\r\n\r\nclass RouteAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      path: \"\",\r\n      method: \"\",\r\n      webs: [],\r\n      groupId: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getWebs();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addRoute(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      path: \"\",\r\n      groupId: \"\",\r\n      webs: [],\r\n      inputGroupName: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleGroupChange = (e, newValue) => {\r\n    this.setState({\r\n      groupId: newValue\r\n    });\r\n  };\r\n\r\n  handleInputGroupChange = (e, newInputValue) => {\r\n    this.setState({\r\n      inputGroupName: newInputValue\r\n    });\r\n  };\r\n\r\n  handleMustAuthenticate = (webId, e) => {\r\n    const { checked } = e.target;\r\n    this.setState(state => ({\r\n      webs: state.webs.map(web => {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (web.web == webId) web.mustAuthenticate = checked;\r\n\r\n        return web;\r\n      })\r\n    }));\r\n  };\r\n\r\n  handleCheckBoxChange = (webId, e) => {\r\n    const isAlreadySelected = Boolean(\r\n      // eslint-disable-next-line eqeqeq\r\n      this.state.webs.find(web => web.web == webId)\r\n    );\r\n\r\n    this.setState(state => ({\r\n      webs: isAlreadySelected\r\n        ? // eslint-disable-next-line eqeqeq\r\n          state.webs.filter(web => web.web != webId)\r\n        : [...state.webs, { web: webId, mustAuthenticate: false }]\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.route;\r\n    const { webs } = this.props.web;\r\n    if (success) return <Redirect to=\"/route\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Route</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Route Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"path\"}\r\n                fieldLabel={\"Route Path\"}\r\n                fieldValue={this.state.path}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"method\"}\r\n                fieldLabel={\"Route Method\"}\r\n                fieldValue={this.state.method}\r\n                fieldItem={[\r\n                  { itemValue: \"get\", itemName: \"Get\" },\r\n                  { itemValue: \"post\", itemName: \"Post\" },\r\n                  { itemValue: \"put\", itemName: \"Put\" },\r\n                  { itemValue: \"patch\", itemName: \"Patch\" },\r\n                  { itemValue: \"delete\", itemName: \"Delete\" }\r\n                ]}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <Typography variant=\"h6\">Web Access: </Typography>\r\n              <br />\r\n              {webs.map((web, index) => (\r\n                <WebAccess\r\n                  key={index}\r\n                  web={web}\r\n                  handleCheckBoxChange={this.handleCheckBoxChange.bind(\r\n                    this,\r\n                    web._id\r\n                  )}\r\n                  handleMustAuthenticate={this.handleMustAuthenticate.bind(\r\n                    this,\r\n                    web._id\r\n                  )}\r\n                  mustAuthorize={web.mustAuthenticate}\r\n                  selectedWebs={this.state.webs}\r\n                />\r\n              ))}\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  route: state.route,\r\n  web: state.web\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addRoute, getWebs }\r\n)(RouteAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { getRoute, editRoute, getWebs } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent,\r\n  SelectComponent\r\n} from \"../../components/components\";\r\n\r\nimport WebAccess from \"./Form/WebAccess.route\";\r\n\r\nclass RouteEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      path: \"\",\r\n      method: \"\",\r\n      webs: [],\r\n      groupId: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getWebs();\r\n    this.props.getRoute(this.props.match.params.id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { route: nextRoute } = nextProps.route;\r\n    const { route } = this.props.route;\r\n\r\n    if (nextRoute !== route)\r\n      this.setState({\r\n        name: nextRoute.name,\r\n        path: nextRoute.path,\r\n        method: nextRoute.method,\r\n        webs: nextRoute.webs\r\n      });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editRoute(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      path: \"\",\r\n      groupId: \"\",\r\n      webs: [],\r\n      inputGroupName: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleGroupChange = (e, newValue) => {\r\n    this.setState({\r\n      groupId: newValue\r\n    });\r\n  };\r\n\r\n  handleInputGroupChange = (e, newInputValue) => {\r\n    this.setState({\r\n      inputGroupName: newInputValue\r\n    });\r\n  };\r\n\r\n  handleMustAuthenticate = (webId, e) => {\r\n    const { checked } = e.target;\r\n    this.setState(state => ({\r\n      webs: state.webs.map(web => {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (web.web == webId) web.mustAuthenticate = checked;\r\n\r\n        return web;\r\n      })\r\n    }));\r\n  };\r\n\r\n  handleCheckBoxChange = (webId, e) => {\r\n    const isAlreadySelected = Boolean(\r\n      // eslint-disable-next-line eqeqeq\r\n      this.state.webs.find(web => web.web == webId)\r\n    );\r\n\r\n    this.setState(state => ({\r\n      webs: isAlreadySelected\r\n        ? // eslint-disable-next-line eqeqeq\r\n          state.webs.filter(web => web.web != webId)\r\n        : [...state.webs, { web: webId, mustAuthenticate: false }]\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.route;\r\n    const { webs } = this.props.web;\r\n    if (success) return <Redirect to=\"/route\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Route</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Route Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <TextFieldComponent\r\n                fieldName={\"path\"}\r\n                fieldLabel={\"Route Path\"}\r\n                fieldValue={this.state.path}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <SelectComponent\r\n                fieldName={\"method\"}\r\n                fieldLabel={\"Route Method\"}\r\n                fieldValue={this.state.method}\r\n                fieldItem={[\r\n                  { itemValue: \"get\", itemName: \"Get\" },\r\n                  { itemValue: \"post\", itemName: \"Post\" },\r\n                  { itemValue: \"put\", itemName: \"Put\" },\r\n                  { itemValue: \"patch\", itemName: \"Patch\" },\r\n                  { itemValue: \"delete\", itemName: \"Delete\" }\r\n                ]}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <Typography variant=\"h6\">Web Access: </Typography>\r\n              <br />\r\n              {webs.map((web, index) => (\r\n                <WebAccess\r\n                  key={index}\r\n                  web={web}\r\n                  handleCheckBoxChange={this.handleCheckBoxChange.bind(\r\n                    this,\r\n                    web._id\r\n                  )}\r\n                  handleMustAuthenticate={this.handleMustAuthenticate.bind(\r\n                    this,\r\n                    web._id\r\n                  )}\r\n                  selectedWebs={this.state.webs}\r\n                />\r\n              ))}\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  route: state.route,\r\n  web: state.web\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editRoute, getWebs, getRoute }\r\n)(RouteEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { getRouteGroups, deleteRouteGroup } from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass RoomScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getRouteGroups();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteRouteGroup(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/route/group/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { routeGroups, msg } = this.props.routeGroup;\r\n\r\n    const field = [\r\n      { title: \"Group Name\", field: \"name\" },\r\n      { title: \"Created At\", field: \"createdAt\" },\r\n      { title: \"Updated At\", field: \"updatedAt\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Route Groups</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/route/group/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Route Group\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Route Group Data Table\"}\r\n              tableColumns={field}\r\n              tableData={routeGroups}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  routeGroup: state.routeGroup\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRouteGroups, deleteRouteGroup }\r\n)(RoomScreen);\r\n","import React from \"react\";\r\nimport { ExpansionPanel, CheckBox } from \"../../../components/components\";\r\n\r\nconst WebAccesses = props => {\r\n  const { route } = props;\r\n  const selected = Boolean(\r\n    // eslint-disable-next-line eqeqeq\r\n    props.selectedRoutes.find(selectedRoute => selectedRoute == route._id)\r\n  );\r\n  return (\r\n    <ExpansionPanel\r\n      expanded={selected}\r\n      summary={\r\n        <CheckBox\r\n          label={route.name}\r\n          name=\"routeAccesses\"\r\n          handleChange={props.handleCheckBoxChange}\r\n          checked={selected}\r\n          color=\"secondary\"\r\n          readOnly={props.readOnly}\r\n        />\r\n      }\r\n      details={\r\n        <>\r\n          <p>\r\n            <b>Path </b>\r\n            <span>{route.path}</span>\r\n          </p>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default WebAccesses;\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addRouteGroup, getRoutes } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent\r\n} from \"../../components/components\";\r\n\r\nimport RouteAccess from \"./Form/RouteAccess.routeGroup\";\r\n\r\nclass RouteGroupAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      routes: [],\r\n      search: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRoutes();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addRouteGroup(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      routeGroups: []\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleCheckBoxChange = (routeId, e) => {\r\n    const isAlreadySelected = Boolean(\r\n      // eslint-disable-next-line eqeqeq\r\n      this.state.routes.find(route => route == routeId)\r\n    );\r\n\r\n    this.setState(state => ({\r\n      routes: isAlreadySelected\r\n        ? // eslint-disable-next-line eqeqeq\r\n          state.routes.filter(route => route != routeId)\r\n        : [...state.routes, routeId]\r\n    }));\r\n  };\r\n\r\n  searchRoute = () => {\r\n    const { search } = this.state;\r\n    const { routes } = this.props.route;\r\n\r\n    return routes.filter(\r\n      route => route.name.toLowerCase().search(search.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.routeGroup;\r\n    if (success) return <Redirect to=\"/route/group\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Route Group</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Group Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <Typography variant=\"h6\">Routes Access: </Typography>\r\n              <TextFieldComponent\r\n                fieldName={\"search\"}\r\n                fieldLabel={\"Search Route\"}\r\n                fieldValue={this.state.search}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <br />\r\n              {this.searchRoute().map((route, index) => (\r\n                <RouteAccess\r\n                  key={index}\r\n                  route={route}\r\n                  handleCheckBoxChange={this.handleCheckBoxChange.bind(\r\n                    this,\r\n                    route._id\r\n                  )}\r\n                  selectedRoutes={this.state.routes}\r\n                />\r\n              ))}\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  routeGroup: state.routeGroup,\r\n  route: state.route\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addRouteGroup, getRoutes }\r\n)(RouteGroupAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  editRouteGroup,\r\n  getRouteGroup,\r\n  getRoutes\r\n} from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent\r\n} from \"../../components/components\";\r\n\r\nimport RouteAccess from \"./Form/RouteAccess.routeGroup\";\r\n\r\nclass RouteGroupEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      routes: [],\r\n      search: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRouteGroup(this.props.match.params.id);\r\n    this.props.getRoutes();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { routeGroup: nextRouteGroup } = nextProps.routeGroup;\r\n    const { routeGroup } = this.props.routeGroup;\r\n\r\n    if (nextRouteGroup !== routeGroup) {\r\n      this.setState({\r\n        name: nextRouteGroup.name,\r\n        routes: nextRouteGroup.routes.map(routeGroup => routeGroup._id)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editRouteGroup(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      routes: []\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleCheckBoxChange = (routeId, e) => {\r\n    const isAlreadySelected = Boolean(\r\n      // eslint-disable-next-line eqeqeq\r\n      this.state.routes.find(route => route == routeId)\r\n    );\r\n\r\n    this.setState(state => ({\r\n      routes: isAlreadySelected\r\n        ? // eslint-disable-next-line eqeqeq\r\n          state.routes.filter(route => route != routeId)\r\n        : [...state.routes, routeId]\r\n    }));\r\n  };\r\n\r\n  searchRoute = () => {\r\n    const { search } = this.state;\r\n    const { routes } = this.props.route;\r\n\r\n    return routes.filter(\r\n      route => route.name.toLowerCase().search(search.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.routeGroup;\r\n    if (success) return <Redirect to=\"/route/group\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Edit Route Group</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Group Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <Typography variant=\"h6\">Routes Access: </Typography>\r\n              <TextFieldComponent\r\n                fieldName={\"search\"}\r\n                fieldLabel={\"Search Route\"}\r\n                fieldValue={this.state.search}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <br />\r\n              {this.searchRoute().map((route, index) => (\r\n                <RouteAccess\r\n                  key={index}\r\n                  route={route}\r\n                  handleCheckBoxChange={this.handleCheckBoxChange.bind(\r\n                    this,\r\n                    route._id\r\n                  )}\r\n                  selectedRoutes={this.state.routes}\r\n                />\r\n              ))}\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  routeGroup: state.routeGroup,\r\n  route: state.route\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { editRouteGroup, getRouteGroup, getRoutes }\r\n)(RouteGroupEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport { getRoles, deleteRole } from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass RoomScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getRoles();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteRole(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/role/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { roles } = this.props.role;\r\n\r\n    const field = [\r\n      { title: \"Role Name\", field: \"name\" },\r\n      { title: \"Created At\", field: \"createdAt\" },\r\n      { title: \"Updated At\", field: \"updatedAt\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Role</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/role/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New Role\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"Route Group Data Table\"}\r\n              tableColumns={field}\r\n              tableData={roles}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  role: state.role\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRoles, deleteRole }\r\n)(RoomScreen);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addRole, getRouteGroups } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent\r\n} from \"../../components/components\";\r\n\r\nimport RouteAccess from \"../RouteGroup/Form/RouteAccess.routeGroup\";\r\n\r\nclass RoleAddScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      routes: [],\r\n      search: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRouteGroups();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.addRole(this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      routes: []\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleCheckBoxChange = (routeId, e) => {\r\n    const isAlreadySelected = Boolean(\r\n      // eslint-disable-next-line eqeqeq\r\n      this.state.routes.find(route => route == routeId)\r\n    );\r\n\r\n    this.setState(state => ({\r\n      routes: isAlreadySelected\r\n        ? // eslint-disable-next-line eqeqeq\r\n          state.routes.filter(route => route != routeId)\r\n        : [...state.routes, routeId]\r\n    }));\r\n  };\r\n\r\n  searchRoute = routes => {\r\n    const { search } = this.state;\r\n\r\n    return routes.filter(\r\n      route => route.name.toLowerCase().search(search.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.role;\r\n    const { routeGroups } = this.props.routeGroup;\r\n    if (success) return <Redirect to=\"/role\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add Role</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Role Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <Typography variant=\"h6\">Routes Access: </Typography>\r\n              <TextFieldComponent\r\n                fieldName={\"search\"}\r\n                fieldLabel={\"Search Route\"}\r\n                fieldValue={this.state.search}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <br />\r\n              {routeGroups.map((routeGroup, i) => (\r\n                <React.Fragment key={i}>\r\n                  <InputLabel>{routeGroup.name} Routes</InputLabel>\r\n                  <br />\r\n                  {this.searchRoute(routeGroup.routes).map((route, index) => (\r\n                    <RouteAccess\r\n                      key={index}\r\n                      route={route}\r\n                      handleCheckBoxChange={this.handleCheckBoxChange.bind(\r\n                        this,\r\n                        route._id\r\n                      )}\r\n                      selectedRoutes={this.state.routes}\r\n                    />\r\n                  ))}\r\n                  <br />\r\n                </React.Fragment>\r\n              ))}\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  role: state.role,\r\n  routeGroup: state.routeGroup\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addRole, getRouteGroups }\r\n)(RoleAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  Grid,\r\n  InputLabel\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { getRole, editRole, getRouteGroups } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  TextFieldComponent\r\n} from \"../../components/components\";\r\n\r\nimport RouteAccess from \"../RouteGroup/Form/RouteAccess.routeGroup\";\r\n\r\nclass RoleEditScreen extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      routes: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getRouteGroups();\r\n    this.props.getRole(this.props.match.params.id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { role: nextRole } = nextProps.role;\r\n    const { role } = this.props.role;\r\n\r\n    if (nextRole != role) {\r\n      this.setState({\r\n        name: nextRole.name,\r\n        routes: nextRole.routes.map(route => route._id)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.editRole(this.props.match.params.id, this.state);\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      name: \"\",\r\n      routes: []\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleCheckBoxChange = (routeId, e) => {\r\n    const isAlreadySelected = Boolean(\r\n      // eslint-disable-next-line eqeqeq\r\n      this.state.routes.find(route => route == routeId)\r\n    );\r\n\r\n    this.setState(state => ({\r\n      routes: isAlreadySelected\r\n        ? // eslint-disable-next-line eqeqeq\r\n          state.routes.filter(route => route != routeId)\r\n        : [...state.routes, routeId]\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.props.role;\r\n    const { routeGroups } = this.props.routeGroup;\r\n    if (success) return <Redirect to=\"/role\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Edit Role</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <TextFieldComponent\r\n                fieldName={\"name\"}\r\n                fieldLabel={\"Role Name\"}\r\n                fieldValue={this.state.name}\r\n                fieldChanged={this.handleChange.bind(this)}\r\n              />\r\n              <Typography variant=\"h6\">Routes Access: </Typography>\r\n              <br />\r\n              {routeGroups.map((routeGroup, i) => (\r\n                <React.Fragment key={i}>\r\n                  <InputLabel>{routeGroup.name} Routes</InputLabel>\r\n                  <br />\r\n                  {routeGroup.routes.map((route, index) => (\r\n                    <RouteAccess\r\n                      key={index}\r\n                      route={route}\r\n                      handleCheckBoxChange={this.handleCheckBoxChange.bind(\r\n                        this,\r\n                        route._id\r\n                      )}\r\n                      selectedRoutes={this.state.routes}\r\n                    />\r\n                  ))}\r\n                </React.Fragment>\r\n              ))}\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Edit Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  role: state.role,\r\n  routeGroup: state.routeGroup\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRole, editRole, getRouteGroups }\r\n)(RoleEditScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, Divider, Grid, Button } from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport {\r\n  getUserApprovals,\r\n  deleteUserApproval\r\n} from \"../../redux/actions/actions\";\r\n\r\nimport { TableComponent, PaperComponent } from \"../../components/components\";\r\n\r\nclass UserApprovalScreen extends Component {\r\n  componentDidMount() {\r\n    this.props.getUserApprovals();\r\n  }\r\n  handlerDelete = id => {\r\n    this.props.deleteUserApproval(id);\r\n  };\r\n\r\n  handlerEdit = id => {\r\n    this.props.history.push(`/user/approval/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { userApprovals } = this.props.userApproval;\r\n    const data = userApprovals.map(userApproval => {\r\n      if (userApproval.priority === 1) userApproval.priorityName = \"Pengawas\";\r\n      else if (userApproval.priority === 2)\r\n        userApproval.priorityName = \"Penanggung jawab\";\r\n\r\n      return userApproval;\r\n    });\r\n    const field = [\r\n      { title: \"NIP\", field: \"user.nip\" },\r\n      { title: \"Name\", field: \"user.fullname\" },\r\n      { title: \"Priority\", field: \"priorityName\" },\r\n      { title: \"Created At\", field: \"createdAt\" },\r\n      { title: \"Updated At\", field: \"updatedAt\" }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h6\">Users Approval</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <Link to=\"/user/approval/add\" style={{ textDecoration: \"none\" }}>\r\n                <Button variant=\"contained\" color=\"secondary\">\r\n                  <AddIcon />\r\n                  Add New User Approval\r\n                </Button>\r\n              </Link>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TableComponent\r\n              tableTitle={\"User Approval Data Table\"}\r\n              tableColumns={field}\r\n              tableData={data}\r\n              tableDelete={this.handlerDelete}\r\n              tableEdit={this.handlerEdit}\r\n              tableDetail={this.handlerDetail}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userApproval: state.userApproval\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getUserApprovals, deleteUserApproval }\r\n)(UserApprovalScreen);\r\n","import axios from \"../../config/axios.config\";\r\nimport {\r\n  LOADING_USERAPPROVAL,\r\n  LOADED_USERAPPROVAL,\r\n  LOADED_USERAPPROVALS,\r\n  DELETE_USERAPPROVAL,\r\n  ERROR_USERAPPROVAL,\r\n  SUCCESS_USERAPPROVAL,\r\n} from \"../types\";\r\n\r\nimport {\r\n  HTTPHandler,\r\n  Notification\r\n} from \"../../util/utility\";\r\n\r\nexport const getUserApprovals = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_USERAPPROVAL,\r\n  });\r\n\r\n  return axios()\r\n    .get(\"/user/approval\")\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_USERAPPROVALS,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_USERAPPROVAL);\r\n    });\r\n};\r\n\r\nexport const getUserApproval = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: LOADING_USERAPPROVAL,\r\n  });\r\n\r\n  return axios()\r\n    .get(`/user/approval/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        data\r\n      } = res.data;\r\n\r\n      dispatch({\r\n        type: LOADED_USERAPPROVAL,\r\n        payload: data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_USERAPPROVAL);\r\n    });\r\n};\r\n\r\nexport const addUserApproval = (userApproval) => (dispatch) => {\r\n  return axios()\r\n    .post(\"/user/approval\", userApproval)\r\n    .then((res) => {\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_USERAPPROVAL,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_USERAPPROVAL);\r\n    });\r\n};\r\n\r\nexport const editUserApproval = (id, userApproval, callback) => (dispatch) => {\r\n  return axios()\r\n    .put(`/user/approval/${id}`, userApproval)\r\n    .then((res) => {\r\n      // console.log(user/approval);\r\n      const {\r\n        data,\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: SUCCESS_USERAPPROVAL,\r\n        payload: data,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n\r\n      if (callback) {\r\n        return callback(data);\r\n      }\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_USERAPPROVAL);\r\n    });\r\n};\r\n\r\nexport const deleteUserApproval = (id) => (dispatch) => {\r\n  return axios()\r\n    .delete(`/user/approval/${id}`)\r\n    .then((res) => {\r\n      const {\r\n        status,\r\n        message\r\n      } = res.data;\r\n      dispatch({\r\n        type: DELETE_USERAPPROVAL,\r\n        payload: id,\r\n        message: {\r\n          status: status,\r\n          message: message.message,\r\n        },\r\n      });\r\n      Notification.createNotifications(message, 'success');\r\n    })\r\n    .catch((err) => {\r\n      return HTTPHandler(err, dispatch, ERROR_USERAPPROVAL);\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { addUserApproval, getEmployees } from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  AutoComplete,\r\n  SelectComponent\r\n} from \"../../components/components\";\r\n\r\nclass UserApprovalAddScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: \"\",\r\n      inputUser: \"\",\r\n      priority: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getEmployees();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    const userId = this.state.user.split(\"-\")[2];\r\n    e.preventDefault();\r\n    this.props.addUserApproval({\r\n      ...this.state,\r\n      user: Boolean(userId) ? userId.trim() : \"\"\r\n    });\r\n  };\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      user: \"\",\r\n      inputUser: \"\",\r\n      priority: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleUserChange = (e, value) => {\r\n    this.setState({\r\n      user: value\r\n    });\r\n  };\r\n\r\n  handleInputUserChange = (e, value) => {\r\n    this.setState({\r\n      inputUser: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { employees } = this.props.employee;\r\n    const { success } = this.props.userApproval;\r\n\r\n    if (success) return <Redirect to=\"/user/approval\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add User Approval</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <AutoComplete\r\n                value={this.state.user}\r\n                inputValue={this.state.inputUser}\r\n                onChange={this.handleUserChange.bind(this)}\r\n                onInputChange={this.handleInputUserChange.bind(this)}\r\n                options={employees.map(employee => {\r\n                  return `${employee.nip} - ${employee.fullname} - ${employee._id}`;\r\n                })}\r\n                label=\"Select User\"\r\n                errorMessage={null}\r\n              />\r\n              <br />\r\n              <SelectComponent\r\n                fieldLabel=\"Priority\"\r\n                fieldName=\"priority\"\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldValue={this.state.priority}\r\n                fieldItem={[\r\n                  {\r\n                    itemName: \"Pelihat\",\r\n                    itemValue: 0\r\n                  },\r\n                  {\r\n                    itemName: \"Pengawas\",\r\n                    itemValue: 1\r\n                  },\r\n                  {\r\n                    itemName: \"Penanggung Jawab\",\r\n                    itemValue: 2\r\n                  }\r\n                ]}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  employee: state.employee,\r\n  userApproval: state.userApproval\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    addUserApproval,\r\n    getEmployees\r\n  }\r\n)(UserApprovalAddScreen);\r\n","import React, { Component } from \"react\";\r\nimport { Typography, Divider, Button, Grid } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  getUserApproval,\r\n  editUserApproval,\r\n  getEmployees\r\n} from \"../../redux/actions/actions\";\r\n\r\nimport {\r\n  PaperComponent,\r\n  AutoComplete,\r\n  SelectComponent\r\n} from \"../../components/components\";\r\n\r\nclass UserApprovalEditScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: \"\",\r\n      inputUser: \"\",\r\n      priority: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUserApproval(this.props.match.params.id);\r\n    this.props.getEmployees();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    const userId = this.state.user.split(\"-\")[2];\r\n    e.preventDefault();\r\n    this.props.editUserApproval(this.props.match.params.id, {\r\n      ...this.state,\r\n      user: Boolean(userId) ? userId.trim() : \"\"\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { userApproval: nextUserApproval } = nextProps.userApproval;\r\n    const { userApproval } = this.props.userApproval;\r\n\r\n    if (nextUserApproval !== userApproval) {\r\n      this.setState({\r\n        user: `${nextUserApproval.user.nip} - ${nextUserApproval.user.fullname} - ${nextUserApproval.user._id}`,\r\n        priority: nextUserApproval.priority\r\n      });\r\n    }\r\n  }\r\n\r\n  handleReset = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      user: \"\",\r\n      inputUser: \"\",\r\n      priority: \"\"\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleUserChange = (e, value) => {\r\n    this.setState({\r\n      user: value\r\n    });\r\n  };\r\n\r\n  handleInputUserChange = (e, value) => {\r\n    this.setState({\r\n      inputUser: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { employees } = this.props.employee;\r\n    const { success } = this.props.userApproval;\r\n\r\n    if (success) return <Redirect to=\"/user/approval\" />;\r\n    return (\r\n      <div>\r\n        <Typography variant={\"h6\"}>Add User Approval</Typography>\r\n        <Divider style={{ marginBottom: \"10px\" }} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <PaperComponent>\r\n              <AutoComplete\r\n                value={this.state.user}\r\n                inputValue={this.state.inputUser}\r\n                disabled={true}\r\n                onChange={this.handleUserChange.bind(this)}\r\n                onInputChange={this.handleInputUserChange.bind(this)}\r\n                options={employees.map(employee => {\r\n                  return `${employee.nip} - ${employee.fullname} - ${employee._id}`;\r\n                })}\r\n                label=\"Select User\"\r\n                errorMessage={null}\r\n              />\r\n              <br />\r\n              <SelectComponent\r\n                fieldLabel=\"Priority\"\r\n                fieldName=\"priority\"\r\n                fieldChanged={this.handleChange.bind(this)}\r\n                fieldValue={this.state.priority}\r\n                fieldItem={[\r\n                  {\r\n                    itemName: \"Pelihat\",\r\n                    itemValue: 0\r\n                  },\r\n                  {\r\n                    itemName: \"Pengawas\",\r\n                    itemValue: 1\r\n                  },\r\n                  {\r\n                    itemName: \"Penanggung Jawab\",\r\n                    itemValue: 2\r\n                  }\r\n                ]}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.handleSubmit.bind(this)}\r\n              >\r\n                Add Data\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                style={{ marginLeft: \"20px\" }}\r\n                onClick={this.handleReset.bind(this)}\r\n              >\r\n                Reset Data\r\n              </Button>\r\n            </PaperComponent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  employee: state.employee,\r\n  userApproval: state.userApproval\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getUserApproval,\r\n    editUserApproval,\r\n    getEmployees\r\n  }\r\n)(UserApprovalEditScreen);\r\n","// import { makeStyles,withStyles } from \"@material-ui/core/styles\";\r\n// const useStyles = makeStyles((theme) => ({\r\n//   //   root: {\r\n//   //     display: \"flex\"\r\n//   //   },\r\n//   //   content: {\r\n//   //     flexGrow: 1,\r\n//   //     padding: theme.spacing(2)\r\n//   //   },\r\n//   //   toolbar: theme.mixins.toolbar\r\n// }));\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n});\r\nexport default styles;\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { TextFieldComponent } from \"../../components/components\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport { login } from \"../../redux/actions/auth.action\";\r\n\r\nimport styles from \"./login.styles\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.login(this.state);\r\n  }\r\n\r\n  render() {\r\n    const { success, msg } = this.props.auth;\r\n    const { classes } = this.props;\r\n\r\n    if (success) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div style={{ flexGrow: 1 }}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          style={{\r\n            height: \"95vh\",\r\n            display: \"flex\",\r\n            justifyItems: \"center\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            lg={12}\r\n            style={{\r\n              maxWidth: \"350px\"\r\n            }}\r\n          >\r\n            <Typography variant={\"h5\"} style={{ fontWeight: \"bold\" }}>\r\n              STHIRA NUSANTARA\r\n            </Typography>\r\n            <Typography>Please login first : </Typography>\r\n            <TextFieldComponent\r\n              fieldLabel=\"NIP\"\r\n              fieldName=\"username\"\r\n              fieldValue={this.state.username}\r\n              fieldChanged={this.handleChange.bind(this)}\r\n            />\r\n            <TextFieldComponent\r\n              fieldLabel=\"Password\"\r\n              fieldName=\"password\"\r\n              fieldValue={this.state.password}\r\n              fieldChanged={this.handleChange.bind(this)}\r\n              fieldType={\"password\"}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ width: \"100%\" }}\r\n              onClick={this.handleSubmit.bind(this)}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ auth: state.auth });\r\n\r\nexport default compose(\r\n  withStyles(styles, { withTheme: true }),\r\n  connect(\r\n    mapStateToProps,\r\n    { login }\r\n  )\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst NotFoundScreen = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n      }}\r\n    >\r\n      <Typography variant={\"h6\"}>{\"404 Not Found\"}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundScreen;\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nimport { LoginScreen } from \"./screens/screens\";\r\nimport { LoggedInScreen } from \"./screens/screens\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/login\" component={LoginScreen} />\r\n            <Route path=\"/\" component={LoggedInScreen} />\r\n          </Switch>\r\n          <ToastContainer />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}